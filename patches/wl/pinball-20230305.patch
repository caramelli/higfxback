# This file is part of HiGFXback

# requires
REQUIRES="autotools-wrappers-lt-build egl-opengl-stubs-build gcc-g++-build sdl2_image-build sdl2_mixer-build"

PKG_CONFIG_PATH=/wl/share/pkgconfig pkg-config --exists --print-errors $REQUIRES || exit 1

PKG_CONFIG_PATH=/wl/share/pkgconfig pkg-config --print-requires sdl2-build | grep -q egl-opengl-stubs-build || { echo SDL2 with OpenGL support required; exit 1; }

# configure (ac-2.69; am-1.15; lt-2.4.2)
libtoolize --ltdl -c -f; aclocal; autoconf; autoheader -f; cp README.md README; automake -a -c
PKG_CONFIG_PATH=/wl/lib/pkgconfig LDFLAGS=-Wl,-rpath,/wl/lib ./configure --disable-static --with-highscore-prefix=/wl/var/games/pinball --prefix=/wl

# build
make

# install
install -d $DESTDIR/wl/bin
install src/pinball $DESTDIR/wl/bin
install -d $DESTDIR/wl/lib/pinball
install -m 644 data/professor/libModuleProfessor.la $DESTDIR/wl/lib/pinball
install data/professor/.libs/libModuleProfessor.so.0.* $DESTDIR/wl/lib/pinball/libModuleProfessor.so.0
install -m 644 data/tux/libModuleTux.la $DESTDIR/wl/lib/pinball
install data/tux/.libs/libModuleTux.so.0.* $DESTDIR/wl/lib/pinball/libModuleTux.so.0
install -d $DESTDIR/wl/share/pinball
install -m 644 data/font_34.png $DESTDIR/wl/share/pinball
install -m 644 data/splash.png $DESTDIR/wl/share/pinball
install -d $DESTDIR/wl/share/pinball/professor
install -m 644 data/professor/bump.wav $DESTDIR/wl/share/pinball/professor
install -m 644 data/professor/bumpsoft.wav $DESTDIR/wl/share/pinball/professor
install -m 644 data/professor/flip.wav $DESTDIR/wl/share/pinball/professor
install -m 644 data/professor/floor.png $DESTDIR/wl/share/pinball/professor
install -m 644 data/professor/gameover.wav $DESTDIR/wl/share/pinball/professor
install -m 644 data/professor/introp.ogg $DESTDIR/wl/share/pinball/professor
install -m 644 data/professor/nudge.wav $DESTDIR/wl/share/pinball/professor
install -m 644 data/professor/pinball.pbl $DESTDIR/wl/share/pinball/professor
install -m 644 data/professor/professor.ogg $DESTDIR/wl/share/pinball/professor
install -m 644 data/professor/professor.png $DESTDIR/wl/share/pinball/professor
install -d $DESTDIR/wl/share/pinball/tux
install -m 644 data/tux/bumphard.wav $DESTDIR/wl/share/pinball/tux
install -m 644 data/tux/bumpsoft.wav $DESTDIR/wl/share/pinball/tux
install -m 644 data/tux/bump.wav $DESTDIR/wl/share/pinball/tux
install -m 644 data/tux/face2.png $DESTDIR/wl/share/pinball/tux
install -m 644 data/tux/flip.wav $DESTDIR/wl/share/pinball/tux
install -m 644 data/tux/floor2.png $DESTDIR/wl/share/pinball/tux
install -m 644 data/tux/floor3.png $DESTDIR/wl/share/pinball/tux
install -m 644 data/tux/game.ogg $DESTDIR/wl/share/pinball/tux
install -m 644 data/tux/gameover.wav $DESTDIR/wl/share/pinball/tux
install -m 644 data/tux/lock.wav $DESTDIR/wl/share/pinball/tux
install -m 644 data/tux/intro.ogg $DESTDIR/wl/share/pinball/tux
install -m 644 data/tux/multiball.ogg $DESTDIR/wl/share/pinball/tux
install -m 644 data/tux/nudge.wav $DESTDIR/wl/share/pinball/tux
install -m 644 data/tux/opentux.wav $DESTDIR/wl/share/pinball/tux
install -m 644 data/tux/pinball.pbl $DESTDIR/wl/share/pinball/tux
install -m 644 data/tux/shoot.wav $DESTDIR/wl/share/pinball/tux
install -m 644 data/tux/tiles.png $DESTDIR/wl/share/pinball/tux
install -m 644 data/tux/up.wav $DESTDIR/wl/share/pinball/tux

# build.pc
install -d $DESTDIR/wl/share/pkgconfig
cat > $DESTDIR/wl/share/pkgconfig/pinball.pc << EOF
Name: pinball
Version: 20230305
Description: Pinball game
Requires: $REQUIRES

exec=\\
/wl/bin/pinball \\
/wl/lib/pinball/libModuleProfessor.la \\
/wl/lib/pinball/libModuleProfessor.so.0 \\
/wl/lib/pinball/libModuleTux.la \\
/wl/lib/pinball/libModuleTux.so.0 \\
/wl/share/pinball/font_34.png \\
/wl/share/pinball/splash.png \\
/wl/share/pinball/professor/bump.wav \\
/wl/share/pinball/professor/bumpsoft.wav \\
/wl/share/pinball/professor/flip.wav \\
/wl/share/pinball/professor/floor.png \\
/wl/share/pinball/professor/gameover.wav \\
/wl/share/pinball/professor/introp.ogg \\
/wl/share/pinball/professor/nudge.wav \\
/wl/share/pinball/professor/pinball.pbl \\
/wl/share/pinball/professor/professor.ogg \\
/wl/share/pinball/professor/professor.png \\
/wl/share/pinball/tux/bumphard.wav \\
/wl/share/pinball/tux/bumpsoft.wav \\
/wl/share/pinball/tux/bump.wav \\
/wl/share/pinball/tux/face2.png \\
/wl/share/pinball/tux/flip.wav \\
/wl/share/pinball/tux/floor2.png \\
/wl/share/pinball/tux/floor3.png \\
/wl/share/pinball/tux/game.ogg \\
/wl/share/pinball/tux/gameover.wav \\
/wl/share/pinball/tux/lock.wav \\
/wl/share/pinball/tux/intro.ogg \\
/wl/share/pinball/tux/multiball.ogg \\
/wl/share/pinball/tux/nudge.wav \\
/wl/share/pinball/tux/opentux.wav \\
/wl/share/pinball/tux/pinball.pbl \\
/wl/share/pinball/tux/shoot.wav \\
/wl/share/pinball/tux/tiles.png \\
/wl/share/pinball/tux/up.wav
EOF

exit
--- pinball-20230305.orig/configure.ac
+++ pinball-20230305/configure.ac
@@ -8,7 +8,7 @@
 	[https://pinball.sf.net])
 
 AC_CONFIG_MACRO_DIRS([libltdl/m4])
-AM_CONFIG_HEADER(pinconfig.h)
+AC_CONFIG_HEADERS(pinconfig.h)
 LT_CONFIG_LTDL_DIR([libltdl])
 
 AC_CANONICAL_HOST
@@ -40,6 +40,8 @@
 LT_INIT
 LTDL_INIT
 
+PKG_PROG_PKG_CONFIG
+
 AC_SUBST(INCLTDL)
 AC_SUBST(LIBLTDL)
 
@@ -56,7 +58,6 @@
 fi
 
 EM_DATADIR="$datadir/$PACKAGE_NAME"
-AC_SUBST(EM_DATADIR)
 eval EM_DATAPATH=`eval echo "$EM_DATADIR"`
 AC_DEFINE_UNQUOTED(EM_DATADIR, "$EM_DATAPATH", [The data dir /usr/local/share/pinball])
 
@@ -123,15 +124,11 @@
 	[enable_gles=no])
 if test "x$enable_gles" = "xyes"; then
   MATHLIB="-lm"
-  AC_CHECK_HEADER(
-      [GLES/gl.h],
-      [ac_cv_search_glLoadMatrixx="none required"],
+  PKG_CHECK_MODULES(
+      [GL], [glesv1_cm],
+      [],
       [AC_MSG_ERROR(*** OpenGL ES headers not found on system!)]
   )
-  AC_ARG_WITH(gles-library,
-  	[AS_HELP_STRING([--with-gles-library=LIBRARY],[OpenGL ES library @<:@default=GLESv1_CM@:>@])],
-  	GL_LIBS=-l"$withval",
-  	GL_LIBS="-lGLESv1_CM")
   AC_DEFINE(HAVE_OPENGLES, [1], [Support for OpenGL ES])
 else
 case "$target" in
@@ -151,19 +148,18 @@
         ;;
     *)
         MATHLIB="-lm"
-        AC_CHECK_HEADER(
-            [GL/gl.h],
-            AC_SEARCH_LIBS(glVertex3f, [opengl32 GL GL2 OpenGL], [test $ac_cv_search_glVertex3f = "none required" || GL_LIBS="$ac_cv_search_gVertex3f $GL_LIBS"], [AC_MSG_ERROR(*** OpenGL library not found on system!)]),
+        PKG_CHECK_MODULES(
+            [GL], [gl],
+            [],
             [AC_MSG_ERROR(*** OpenGL headers not found on system!)]
         )
         ;;
 esac
 fi
 
-AC_SUBST(MATHLIB)
 LIBS="$MATHLIB $LIBS"
-AC_SUBST(GL_LIBS)
 LIBS="$GL_LIBS $LIBS"
+CPPFLAGS="$GL_CFLAGS $CPPFLAGS"
 
 dnl SDL ***************************************
 PKG_CHECK_MODULES([SDL],
@@ -293,9 +289,6 @@
 AC_DEFINE(EM_USE_QUADTREE, [1], [Quadtree instead of octtree])
 AC_DEFINE(EM_USE_SHARED_COLOR, [1], [One color per vertex])
 
-dnl AC_SUBST(pkglibdir)
-dnl AC_SUBST(pkgincludedir)
-
 AC_CONFIG_FILES([Makefile addon/Makefile base/Makefile data/Makefile data/tux/Makefile data/professor/Makefile src/Makefile test/Makefile pinball-config])
 
 AC_OUTPUT
--- pinball-20230305.orig/src/Pinball.cpp
+++ pinball-20230305/src/Pinball.cpp
@@ -11,7 +11,6 @@
 #include <fstream>
 #include <string>
 //#include <sstream>
-#include <strstream>
 #include <iostream>
 
 #include <sys/stat.h>
@@ -144,7 +143,7 @@
     return EM_MENU_NOP;
   }
   const char * getText() {
-    ostrstream stm;
+    ostringstream stm;
     stm.clear();
     string name(m_Name);
     const char * keyname = Config::getInstance()->getKeyCommonName(Config::getInstance()->getKey(name));
