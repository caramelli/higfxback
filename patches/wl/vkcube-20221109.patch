# This file is part of HiGFXback

# requires
REQUIRES="glslang-build libpng-build meson-build vulkan-loader-build wayland-build"

PKG_CONFIG_PATH=/wl/share/pkgconfig pkg-config --exists --print-errors $REQUIRES || exit 1

# configure
rm -f vkcube.frag.spv.h.in vkcube.vert.spv.h.in
PATH=/bin:/wl/bin PKG_CONFIG_PATH=/wl/lib/pkgconfig meson setup --prefix=/wl build

# build
meson compile -C build

# install
install -d $DESTDIR/wl/bin
install build/vkcube $DESTDIR/wl/bin

# build.pc
install -d $DESTDIR/wl/share/pkgconfig
cat > $DESTDIR/wl/share/pkgconfig/vkcube-build.pc << EOF
Name: vkcube
Version: 20221109
Description: Spinning Vulkan cube using Window System Integration
Requires: $REQUIRES

exec=\\
/wl/bin/vkcube
EOF

exit
--- vkcube-20221109.orig/common.h
+++ vkcube-20221109/common.h
@@ -3,11 +3,14 @@
 #include <sys/time.h>
 #include <stdbool.h>
 #include <string.h>
-#include <strings.h>
 
+#if defined(HAVE_VULKAN_INTEL_H)
 #include <xf86drm.h>
 #include <xf86drmMode.h>
 #include <drm_fourcc.h>
+#include <gbm.h>
+#endif
+
 #include <png.h>
 
 #if defined(ENABLE_XCB)
@@ -24,8 +27,6 @@
 #define VK_PROTOTYPES
 #include <vulkan/vulkan.h>
 
-#include <gbm.h>
-
 #include "esUtil.h"
 
 #define printflike(a, b) __attribute__((format(printf, (a), (b))))
@@ -33,7 +34,10 @@
 #define MAX_NUM_IMAGES 5
 
 struct vkcube_buffer {
+#if defined(HAVE_VULKAN_INTEL_H)
    struct gbm_bo *gbm_bo;
+   uint32_t fb;
+#endif
    VkDeviceMemory mem;
    VkImage image;
    VkImageView view;
@@ -41,7 +45,6 @@
    VkFence fence;
    VkCommandBuffer cmd_buffer;
 
-   uint32_t fb;
    uint32_t stride;
 };
 
@@ -57,8 +60,12 @@
 
    bool protected;
 
+#if defined(HAVE_VULKAN_INTEL_H)
    int fd;
+   drmModeCrtc *crtc;
+   drmModeConnector *connector;
    struct gbm_device *gbm_device;
+#endif
 
 #if defined(ENABLE_XCB)
    struct {
@@ -89,8 +96,6 @@
 
    VkSwapchainKHR swap_chain;
 
-   drmModeCrtc *crtc;
-   drmModeConnector *connector;
    uint32_t width, height;
 
    VkInstance instance;
--- vkcube-20221109.orig/main.c
+++ vkcube-20221109/main.c
@@ -37,25 +37,28 @@
 
 #define _DEFAULT_SOURCE /* for major() */
 
+#include <assert.h>
 #include <stdlib.h>
 #include <stdio.h>
-#include <fcntl.h>
 #include <unistd.h>
+#if defined(ENABLE_WAYLAND)
+#include <linux/input.h>
+#endif
+#if defined(ENABLE_WAYLAND) || defined(HAVE_VULKAN_INTEL_H)
 #include <errno.h>
-#include <sys/ioctl.h>
-#include <sys/types.h>
-#include <sys/sysmacros.h>
-#include <sys/stat.h>
-#include <signal.h>
+#include <poll.h>
+#endif
+#if defined(HAVE_VULKAN_INTEL_H)
+#include <fcntl.h>
 #include <linux/kd.h>
-#include <linux/vt.h>
 #include <linux/major.h>
+#include <linux/vt.h>
+#include <signal.h>
+#include <sys/ioctl.h>
+#include <sys/stat.h>
 #include <termios.h>
-#include <poll.h>
-#include <math.h>
-#include <assert.h>
-#include <sys/mman.h>
-#include <linux/input.h>
+#include <vulkan/vulkan_intel.h>
+#endif
 
 #include "common.h"
 
@@ -451,12 +454,10 @@
    return 0;
 }
 
-#ifdef HAVE_VULKAN_INTEL_H
+#if defined(HAVE_VULKAN_INTEL_H)
 
 /* KMS display code - render to kernel modesetting fb */
 
-#include <vulkan/vulkan_intel.h>
-
 static struct termios save_tio;
 
 static void
@@ -1800,7 +1801,9 @@
    parse_args(argc, argv);
 
    vc.model = cube_model;
+#if defined(HAVE_VULKAN_INTEL_H)
    vc.gbm_device = NULL;
+#endif
 #if defined(ENABLE_XCB)
    vc.xcb.window = XCB_NONE;
 #endif
--- vkcube-20221109.orig/meson.build
+++ vkcube-20221109/meson.build
@@ -7,8 +7,8 @@
 
 dep_vulkan = dependency('vulkan')
 dep_libpng = dependency('libpng')
-dep_libdrm = dependency('libdrm')
-dep_gbm = dependency('gbm')
+dep_libdrm = []
+dep_gbm = []
 dep_wayland_client = dependency('wayland-client', required : get_option('wayland') == 'true')
 dep_wayland_protocols = dependency('wayland-protocols', version : '>= 1.12', required : get_option('wayland') == 'true')
 dep_xcb = dependency('xcb', required : get_option('xcb') == 'true')
@@ -16,6 +16,9 @@
 defs = []
 if cc.has_header('vulkan/vulkan_intel.h', dependencies: dep_vulkan)
   defs += '-DHAVE_VULKAN_INTEL_H'
+
+  dep_libdrm = dependency('libdrm')
+  dep_gbm = dependency('gbm')
 endif
 
 if dep_wayland_client.found() and get_option('wayland') != 'false'
