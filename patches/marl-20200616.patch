# This file is part of HiGFXback

# requires
REQUIRES="cmake3-build gcc-g++-build"

pkg-config --exists --print-errors $REQUIRES || exit 1

# configure
GENERATOR=${GENERATOR-Unix Makefiles}
cmake -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX= -B build -G "$GENERATOR"

# build
cmake --build build

# install
install -d $DESTDIR/include/marl
install -m 644 include/marl/blockingcall.h $DESTDIR/include/marl
install -m 644 include/marl/conditionvariable.h $DESTDIR/include/marl
install -m 644 include/marl/containers.h $DESTDIR/include/marl
install -m 644 include/marl/debug.h $DESTDIR/include/marl
install -m 644 include/marl/defer.h $DESTDIR/include/marl
install -m 644 include/marl/deprecated.h $DESTDIR/include/marl
install -m 644 include/marl/event.h $DESTDIR/include/marl
install -m 644 include/marl/finally.h $DESTDIR/include/marl
install -m 644 include/marl/memory.h $DESTDIR/include/marl
install -m 644 include/marl/mutex.h $DESTDIR/include/marl
install -m 644 include/marl/pool.h $DESTDIR/include/marl
install -m 644 include/marl/scheduler.h $DESTDIR/include/marl
install -m 644 include/marl/task.h $DESTDIR/include/marl
install -m 644 include/marl/thread.h $DESTDIR/include/marl
install -m 644 include/marl/ticket.h $DESTDIR/include/marl
install -m 644 include/marl/trace.h $DESTDIR/include/marl
install -m 644 include/marl/tsa.h $DESTDIR/include/marl
install -m 644 include/marl/waitgroup.h $DESTDIR/include/marl
install -d $DESTDIR/lib
install build/libmarl.so.0.* $DESTDIR/lib/libmarl.so.0
ln -sf libmarl.so.0 $DESTDIR/lib/libmarl.so
install -d $DESTDIR/lib/pkgconfig
install -m 644 build/marl.pc $DESTDIR/lib/pkgconfig

# build.pc
install -d $DESTDIR/share/pkgconfig
cat > $DESTDIR/share/pkgconfig/marl-build.pc << EOF
Name: marl
Version: 20200616
Description: Hybrid thread / fiber task scheduler
Requires: $REQUIRES

devel=\\
/include/marl/blockingcall.h \\
/include/marl/conditionvariable.h \\
/include/marl/containers.h \\
/include/marl/debug.h \\
/include/marl/defer.h \\
/include/marl/deprecated.h \\
/include/marl/event.h \\
/include/marl/finally.h \\
/include/marl/memory.h \\
/include/marl/mutex.h \\
/include/marl/pool.h \\
/include/marl/scheduler.h \\
/include/marl/task.h \\
/include/marl/thread.h \\
/include/marl/ticket.h \\
/include/marl/trace.h \\
/include/marl/tsa.h \\
/include/marl/waitgroup.h \\
/lib/libmarl.so \\
/lib/pkgconfig/marl.pc

exec=\\
/lib/libmarl.so.0
EOF

exit
--- marl-20200616.orig/CMakeLists.txt
+++ marl-20200616/CMakeLists.txt
@@ -49,7 +49,7 @@
 option_if_not_defined(MARL_ASAN "Build marl with address sanitizer" OFF)
 option_if_not_defined(MARL_MSAN "Build marl with memory sanitizer" OFF)
 option_if_not_defined(MARL_TSAN "Build marl with thread sanitizer" OFF)
-option_if_not_defined(MARL_INSTALL "Create marl install target" OFF)
+option_if_not_defined(MARL_INSTALL "Create marl install target" ON)
 option_if_not_defined(MARL_FULL_BENCHMARK "Run benchmarks for [0 .. numLogicalCPUs] with no stepping" OFF)
 option_if_not_defined(MARL_DEBUG_ENABLED "Enable debug checks even in release builds" OFF)
 
@@ -234,6 +234,12 @@
         INSTALL_DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/marl
     )
 
+    configure_file(
+        ${CMAKE_CURRENT_SOURCE_DIR}/pkgconfig/marl.pc.in
+        ${CMAKE_CURRENT_BINARY_DIR}/marl.pc
+        @ONLY
+    )
+
     install(DIRECTORY ${MARL_INCLUDE_DIR}/marl
         DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
         USE_SOURCE_PERMISSIONS
@@ -256,6 +262,10 @@
     install(FILES ${CMAKE_CURRENT_BINARY_DIR}/marl-config.cmake
         DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/marl
     )
+
+    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/marl.pc
+        DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig
+    )
 endif(MARL_INSTALL)
 
 # tests
--- marl-20200616.orig/VERSION
+++ marl-20200616/VERSION
@@ -1 +1 @@
-0.0.0-dev
\ No newline at end of file
+0.0.0
\ No newline at end of file
--- marl-20200616.orig/cmake/parse_version.cmake
+++ marl-20200616/cmake/parse_version.cmake
@@ -23,6 +23,7 @@
 function(parse_version FILE PROJECT)
     configure_file(${FILE} "${CMAKE_CURRENT_BINARY_DIR}/VERSION") # Required to re-run cmake on version change
     file(READ ${FILE} VERSION)
+    string(STRIP ${VERSION} VERSION)
     if(${VERSION} MATCHES "([0-9]+)\\.([0-9]+)\\.([0-9]+)(-[a-zA-Z0-9]+)?")
         set(FLAVOR "")
         if(NOT "${CMAKE_MATCH_4}" STREQUAL "")
--- marl-20200616.orig/pkgconfig/marl.pc.in
+++ marl-20200616/pkgconfig/marl.pc.in
@@ -0,0 +1,9 @@
+prefix=@CMAKE_INSTALL_PREFIX@
+includedir=${prefix}/@CMAKE_INSTALL_INCLUDEDIR@
+libdir=${prefix}/@CMAKE_INSTALL_LIBDIR@
+
+Name: Marl
+Description: Hybrid thread / fiber task scheduler
+Version: @MARL_VERSION@
+Libs: -L${libdir} -lmarl
+Cflags: -I${includedir}
