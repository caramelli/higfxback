# This file is part of HiGFXback

# requires
REQUIRES="cmake3-build libstdc++-build tinyxml2-build vulkan-headers-build"

PKG_CONFIG_PATH=/fb/share/pkgconfig pkg-config --exists --print-errors $REQUIRES || exit 1

# configure
GENERATOR=${GENERATOR-Unix Makefiles}
rm -rf tinyxml2
rm -rf Vulkan-Headers
PKG_CONFIG_PATH=/fb/lib/pkgconfig cmake -DVULKAN_HPP_INSTALL=ON -DVULKAN_HPP_RUN_GENERATOR=ON -DCMAKE_INSTALL_INCLUDEDIR=/fb/include -B build -G "$GENERATOR"

# build
cmake --build build

# install
install -d $DESTDIR/fb/include/vulkan
install -m 644 vulkan/vulkan.hpp $DESTDIR/fb/include/vulkan

# build.pc
install -d $DESTDIR/fb/share/pkgconfig
cat > $DESTDIR/fb/share/pkgconfig/vulkan-hpp-build.pc << EOF
Name: Vulkan-Hpp
Version: 20200721
Description: Vulkan C++ API Header
Requires: $REQUIRES

devel=\\
/fb/include/vulkan/vulkan.hpp
EOF

exit

# patch
--- Vulkan-Hpp-20200721.orig/CMakeLists.txt
+++ Vulkan-Hpp-20200721/CMakeLists.txt
@@ -55,10 +55,20 @@
 
 set(CMAKE_CXX_STANDARD 11)
 
-if (NOT DEFINED VULKAN_HPP_VULKAN_HEADERS_SRC_DIR)
-  set(VULKAN_HPP_VULKAN_HEADERS_SRC_DIR "${CMAKE_CURRENT_SOURCE_DIR}/Vulkan-Headers")
+find_package(PkgConfig QUIET)
+pkg_check_modules(VulkanRegistry QUIET vulkan-registry)
+if (VulkanRegistry_FOUND)
+  pkg_get_variable(VulkanRegistry_DIR vulkan-registry pkgdatadir)
 endif()
-file(TO_NATIVE_PATH ${VULKAN_HPP_VULKAN_HEADERS_SRC_DIR}/registry/vk.xml vk_spec)
+
+if (NOT DEFINED VulkanRegistry_DIR)
+  if (DEFINED VULKAN_HPP_VULKAN_HEADERS_SRC_DIR)
+    set(VulkanRegistry_DIR "${VULKAN_HPP_VULKAN_HEADERS_SRC_DIR}/registry")
+  else()
+    set(VulkanRegistry_DIR "${CMAKE_CURRENT_SOURCE_DIR}/Vulkan-Headers/registry")
+  endif()
+endif()
+file(TO_NATIVE_PATH ${VulkanRegistry_DIR}/vk.xml vk_spec)
 string(REPLACE "\\" "\\\\" vk_spec ${vk_spec})
 add_definitions(-DVK_SPEC="${vk_spec}")
 
@@ -79,18 +89,20 @@
   VulkanHppGenerator.cpp
 )
 
-if (NOT DEFINED VULKAN_HPP_TINYXML2_SRC_DIR)
-  set(VULKAN_HPP_TINYXML2_SRC_DIR "${CMAKE_CURRENT_SOURCE_DIR}/tinyxml2")
+if (IS_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/tinyxml2)
+  if (NOT DEFINED VULKAN_HPP_TINYXML2_SRC_DIR)
+    set(VULKAN_HPP_TINYXML2_SRC_DIR "${CMAKE_CURRENT_SOURCE_DIR}/tinyxml2")
+  endif()
+
+  set(TINYXML2_SOURCES
+    ${VULKAN_HPP_TINYXML2_SRC_DIR}/tinyxml2.cpp
+  )
+
+  set(TINYXML2_HEADERS
+    ${VULKAN_HPP_TINYXML2_SRC_DIR}/tinyxml2.h
+  )
 endif()
 
-set(TINYXML2_SOURCES
-  ${VULKAN_HPP_TINYXML2_SRC_DIR}/tinyxml2.cpp
-)
-
-set(TINYXML2_HEADERS
-  ${VULKAN_HPP_TINYXML2_SRC_DIR}/tinyxml2.h
-)
-
 source_group(headers FILES ${HEADERS})
 source_group(sources FILES ${SOURCES})
 
@@ -106,7 +118,11 @@
 
 set_property(TARGET VulkanHppGenerator PROPERTY CXX_STANDARD 14)
 
-target_include_directories(VulkanHppGenerator PRIVATE ${VULKAN_HPP_TINYXML2_SRC_DIR})
+if (DEFINED VULKAN_HPP_TINYXML2_SRC_DIR)
+  target_include_directories(VulkanHppGenerator PRIVATE ${VULKAN_HPP_TINYXML2_SRC_DIR})
+else()
+  target_link_libraries(VulkanHppGenerator tinyxml2)
+endif()
 
 option (VULKAN_HPP_RUN_GENERATOR "Run the HPP generator" OFF)
 if (VULKAN_HPP_RUN_GENERATOR)

# source
https://github.com/KhronosGroup/Vulkan-Hpp/archive/43df4dd0f133561600f778683575e5c12add2660/Vulkan-Hpp-20200721.tar.gz
