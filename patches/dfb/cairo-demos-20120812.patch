# This file is part of HiGFXback

# requires
REQUIRES="cairo-build gdk-pixbuf-build gnome-backgrounds-build make-build"

PKG_CONFIG_PATH=/dfb/share/pkgconfig pkg-config --exists --print-errors $REQUIRES || exit 1

# build
PKG_CONFIG_PATH=/dfb/lib/pkgconfig LDFLAGS=-Wl,-rpath,/dfb/lib DEFINES=-DBACKGROUNDDIR="\\\"/share/backgrounds\\\" -DDEMOSDATADIR=\\\"/dfb/share/cairo-demos\\\"" make

# install
install -d $DESTDIR/dfb/bin
install chart-demo $DESTDIR/dfb/bin
install dragon-demo $DESTDIR/dfb/bin
install fish-demo $DESTDIR/dfb/bin
install flowers-demo $DESTDIR/dfb/bin
install gears-demo $DESTDIR/dfb/bin
install gradient-demo $DESTDIR/dfb/bin
install maze-demo $DESTDIR/dfb/bin
install pythagoras-demo $DESTDIR/dfb/bin
install sierpinski-demo $DESTDIR/dfb/bin
install slideshow-demo $DESTDIR/dfb/bin
install spinner-demo $DESTDIR/dfb/bin
install spiral-complex $DESTDIR/dfb/bin
install spiral-demo $DESTDIR/dfb/bin
install tiger-demo $DESTDIR/dfb/bin
install -d $DESTDIR/dfb/share/cairo-demos
install -m 644 fishbg.png $DESTDIR/dfb/share/cairo-demos
install -m 644 fishstrip.png $DESTDIR/dfb/share/cairo-demos
install -d $DESTDIR/dfb/share/cairo-demos/images/4000x4000
install -m 644 images/4000x4000/202672-4000x4000.jpg $DESTDIR/dfb/share/cairo-demos/images/4000x4000

# build.pc
install -d $DESTDIR/dfb/share/pkgconfig
cat > $DESTDIR/dfb/share/pkgconfig/cairo-demos-build.pc << EOF
Name: cairo-demos
Version: 20120812
Description: A collection of Cairo demos and test programs
Requires: $REQUIRES

exec=\\
/dfb/bin/chart-demo \\
/dfb/bin/dragon-demo \\
/dfb/bin/fish-demo \\
/dfb/bin/flowers-demo \\
/dfb/bin/gears-demo \\
/dfb/bin/gradient-demo \\
/dfb/bin/maze-demo \\
/dfb/bin/pythagoras-demo \\
/dfb/bin/sierpinski-demo \\
/dfb/bin/slideshow-demo \\
/dfb/bin/spinner-demo \\
/dfb/bin/spiral-complex \\
/dfb/bin/spiral-demo \\
/dfb/bin/tiger-demo \\
/dfb/share/cairo-demos/fishbg.png \\
/dfb/share/cairo-demos/fishstrip.png \\
/dfb/share/cairo-demos/images/4000x4000/202672-4000x4000.jpg
EOF

exit
--- cairo-demos-20120812.orig/Makefile
+++ cairo-demos-20120812/Makefile
@@ -10,13 +10,22 @@
 DEFINES+=-DHAVE_DRM=0
 endif
 
+DIRECTFB:=$(shell pkg-config --exists cairo-directfb && echo 1 || echo 0)
+ifneq ($(DIRECTFB),0)
+DEFINES+=-DHAVE_DIRECTFB=1
+SOURCES+=directfb.c
+REQUIRES+=cairo-directfb
+else
+DEFINES+=-DHAVE_DIRECTFB=0
+endif
+
 XLIB:=$(shell pkg-config --exists cairo-xlib && echo 1 || echo 0)
 ifneq ($(XLIB),0)
 DEFINES+=-DHAVE_XLIB=1 -DHAVE_XIMAGE=1
 SOURCES+=xlib.c ximage.c
 REQUIRES+=cairo-xlib xext
 else
-DEFINES+=-DHAVE_XLIB=0
+DEFINES+=-DHAVE_XLIB=0 -DHAVE_XIMAGE=0
 endif
 
 XCB:=$(shell pkg-config --exists cairo-xcb && echo 1 || echo 0)
@@ -63,7 +72,7 @@
 endif
 
 ifeq ($(shell pkg-config --exists gdk-pixbuf-2.0 && echo 1), 1)
-all: spinner-demo slideshow-demo
+all: spinner-demo spiral-complex slideshow-demo
 REQUIRES+=gdk-pixbuf-2.0
 DEFINES+=-DHAVE_GDK_PIXBUF
 endif
@@ -72,39 +81,41 @@
 LIBS:=$(shell pkg-config --libs $(REQUIRES)) -lm
 
 spinner-demo: spinner-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ spinner-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ spinner-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
+spiral-complex: spiral-complex.c $(SOURCES) demo.h Makefile
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ spiral-complex.c $(SOURCES) $(LDFLAGS) $(LIBS)
 spiral-demo: spiral-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ spiral-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ spiral-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 slideshow-demo: slideshow-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ slideshow-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ slideshow-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 poppler-demo: poppler-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ poppler-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ poppler-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 tiger-demo: tiger-demo.c $(SOURCES) demo.h Makefile tiger.inc
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ tiger-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ tiger-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 fish-demo: fish-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ fish-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ fish-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 fish2-demo: fish2-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ fish2-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ fish2-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 flowers-demo: flowers-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ flowers-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ flowers-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 gears-demo: gears-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ gears-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ gears-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 gradient-demo: gradient-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ gradient-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ gradient-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 chart-demo: chart-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ chart-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ chart-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 waterfall-demo: waterfall-demo.c $(SOURCES) demo.h list.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ waterfall-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ waterfall-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 dragon-demo: dragon-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ dragon-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ dragon-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 pythagoras-demo: pythagoras-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ pythagoras-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ pythagoras-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 wave-demo: wave-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ wave-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ wave-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 sierpinski-demo: sierpinski-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ sierpinski-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ sierpinski-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 maze-demo: maze-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ maze-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ maze-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 clean:
 	rm -f *-demo
 
--- cairo-demos-20120812.orig/chart-demo.c
+++ cairo-demos-20120812/chart-demo.c
@@ -295,7 +295,7 @@
 		for (n = 0; n < 5; n++)
 			chart_update(&c[n]);
 
-		if (benchmark < 0 && 0) {
+		if (benchmark < 0 && !getenv("CAIRO_DEMOS_QUIET")) {
 			delta = now.tv_sec - last_tty.tv_sec;
 			delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
 			frames++;
--- cairo-demos-20120812.orig/demo.c
+++ cairo-demos-20120812/demo.c
@@ -143,6 +143,7 @@
     struct device *device = 0;
     enum {
 	AUTO,
+	DIRECTFB,
 	XLIB,
 	XIMAGE,
 	SKIA,
@@ -154,7 +155,9 @@
     int n;
 
     for (n = 1; n < argc; n++) {
-	if (strcmp (argv[n], "--xlib") == 0) {
+	if (strcmp (argv[n], "--directfb") == 0) {
+	    backend = DIRECTFB;
+	} else if (strcmp (argv[n], "--xlib") == 0) {
 	    backend = XLIB;
 	} else if (strcmp (argv[n], "--xcb") == 0) {
 	    backend = XCB;
@@ -174,6 +177,8 @@
     if (backend == AUTO) {
 	if (device == 0 && HAVE_DRM)
 	    device = drm_open (argc, argv);
+	if (device == 0 && HAVE_DIRECTFB)
+	    device = directfb_open (argc, argv);
 	if (device == 0 && HAVE_XLIB)
 	    device = xlib_open (argc, argv);
 	if (device == 0 && HAVE_XCB)
@@ -188,6 +193,9 @@
 	    device = skia_open (argc, argv);
     } else switch (backend) {
     case AUTO:
+    case DIRECTFB:
+	device = directfb_open (argc, argv);
+	break;
     case XLIB:
 	device = xlib_open (argc, argv);
 	break;
@@ -218,7 +226,10 @@
 	exit(1);
     }
 
-    printf("Using backend \"%s\"\n", device->name);
+    if (!getenv("CAIRO_DEMOS_QUIET")) {
+	printf("Using backend \"%s\"\n", device->name);
+    }
+
     return device;
 }
 
@@ -340,11 +351,11 @@
 			      name, frame_count, frame_count == 1 ? "" : "s");
     } else {
 	    if (version)
-		    snprintf (buf, sizeof (buf), "%s (%s): %.1f fps, %d frames",
-			      name, version, 1. / avg, frame_count);
+		    snprintf (buf, sizeof (buf), "%s (%s): %.1f fps",
+			      name, version, 1. / avg);
 	    else
-		    snprintf (buf, sizeof (buf), "%s: %.1f fps, %d frames",
-			      name, 1. / avg, frame_count);
+		    snprintf (buf, sizeof (buf), "%s: %.1f fps",
+			      name, 1. / avg);
     }
     cairo_set_font_size (cr, 18);
     cairo_text_extents (cr, buf, &extents);
--- cairo-demos-20120812.orig/demo.h
+++ cairo-demos-20120812/demo.h
@@ -89,6 +89,12 @@
 static inline struct device *ximage_open (int argc, char **argv) { return 0; }
 #endif
 
+#if HAVE_DIRECTFB
+struct device *directfb_open (int argc, char **argv);
+#else
+static inline struct device *directfb_open (int argc, char **argv) { return 0; }
+#endif
+
 #if HAVE_DRM
 struct device *drm_open (int argc, char **argv);
 #else
--- cairo-demos-20120812.orig/directfb.c
+++ cairo-demos-20120812/directfb.c
@@ -0,0 +1,68 @@
+#include <cairo-directfb.h>
+
+#include "demo.h"
+
+struct directfb_device {
+    struct device base;
+    struct framebuffer fb;
+
+    IDirectFBSurface *surface;
+};
+
+static void
+destroy (struct framebuffer *fb)
+{
+}
+
+static void
+show (struct framebuffer *fb)
+{
+    struct directfb_device *device = (struct directfb_device *) fb->device;
+    device->surface->Flip (device->surface, NULL, DSFLIP_WAITFORSYNC);
+}
+
+static struct framebuffer *
+get_fb (struct device *abstract_device)
+{
+    struct directfb_device *device = (struct directfb_device *) abstract_device;
+    return &device->fb;
+}
+
+struct device *
+directfb_open (int argc, char **argv)
+{
+    struct directfb_device *device;
+    IDirectFB *dfb;
+    IDirectFBDisplayLayer *layer;
+    DFBDisplayLayerConfig layer_config;
+    IDirectFBWindow *window;
+    DFBWindowDescription desc;
+
+    device = (struct directfb_device *) malloc (sizeof (struct directfb_device));
+    device->base.name = "directfb";
+    device->base.get_framebuffer = get_fb;
+
+    DirectFBInit (NULL, NULL);
+    DirectFBCreate (&dfb);
+    dfb->GetDisplayLayer (dfb, DLID_PRIMARY, &layer);
+    layer->GetConfiguration (layer, &layer_config);
+
+    device->base.width = layer_config.width;
+    device->base.height = layer_config.height;
+    device_get_size (argc, argv, &device->base.width, &device->base.height);
+
+    desc.flags = DWDESC_WIDTH | DWDESC_HEIGHT;
+    desc.width = device->base.width;
+    desc.height = device->base.height;
+    layer->CreateWindow (layer, &desc, &window);
+    window->SetOpacity (window, 0xff);
+    window->GetSurface (window, &device->surface);
+    device->base.scanout = cairo_directfb_surface_create (dfb, device->surface);
+
+    device->fb.device = &device->base;
+    device->fb.surface = device->base.scanout;
+    device->fb.show = show;
+    device->fb.destroy = destroy;
+
+    return &device->base;
+}
--- cairo-demos-20120812.orig/dragon-demo.c
+++ cairo-demos-20120812/dragon-demo.c
@@ -27,6 +27,7 @@
  */
 
 #include "demo.h"
+#include <stdlib.h>
 #include <string.h>
 #include <stdio.h>
 #include <signal.h>
@@ -181,13 +182,11 @@
 	int stroke = 1;
 	int benchmark;
 	const char *version;
-	enum clip clip;
 
 	int n;
 
 	device = device_open(argc, argv);
 	version = device_show_version(argc, argv);
-	clip = device_get_clip(argc, argv);
 	benchmark = device_get_benchmark(argc, argv);
 	if (benchmark == 0)
 		benchmark = 20;
@@ -223,7 +222,7 @@
 		fb->show (fb);
 		fb->destroy (fb);
 
-		if (benchmark < 0 && 0) {
+		if (benchmark < 0 && !getenv("CAIRO_DEMOS_QUIET")) {
 			delta = now.tv_sec - last_tty.tv_sec;
 			delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
 			frames++;
--- cairo-demos-20120812.orig/fish-demo.c
+++ cairo-demos-20120812/fish-demo.c
@@ -30,7 +30,7 @@
 	double sf;
 	cairo_t *cr;
 
-	image = cairo_image_surface_create_from_png("fishbg.png");
+	image = cairo_image_surface_create_from_png(DEMOSDATADIR"/fishbg.png");
 
 	height = cairo_image_surface_get_height(image);
 	width = cairo_image_surface_get_width(image);
@@ -65,7 +65,7 @@
 	int width, height, x, y;
 	cairo_t *cr;
 
-	image = cairo_image_surface_create_from_png("fishstrip.png");
+	image = cairo_image_surface_create_from_png(DEMOSDATADIR"/fishstrip.png");
 	width = cairo_image_surface_get_width(image);
 	height = cairo_image_surface_get_height(image);
 	surface = cairo_surface_create_similar(device->scanout,
@@ -265,7 +265,7 @@
 		fb->show (fb);
 		fb->destroy (fb);
 
-		if (benchmark < 0 && 0) {
+		if (benchmark < 0 && !getenv("CAIRO_DEMOS_QUIET")) {
 			delta = now.tv_sec - last_tty.tv_sec;
 			delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
 			frames++;
--- cairo-demos-20120812.orig/flowers-demo.c
+++ cairo-demos-20120812/flowers-demo.c
@@ -422,7 +422,7 @@
 
 		flowers_update(device->width, device->height);
 
-		if (benchmark < 0 && 0) {
+		if (benchmark < 0 && !getenv("CAIRO_DEMOS_QUIET")) {
 			delta = now.tv_sec - last_tty.tv_sec;
 			delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
 			frames++;
--- cairo-demos-20120812.orig/gradient-demo.c
+++ cairo-demos-20120812/gradient-demo.c
@@ -219,7 +219,7 @@
 		fb->show (fb);
 		fb->destroy (fb);
 
-		if (benchmark < 0 && 0) {
+		if (benchmark < 0 && !getenv("CAIRO_DEMOS_QUIET")) {
 			delta = now.tv_sec - last_tty.tv_sec;
 			delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
 			frames++;
--- cairo-demos-20120812.orig/maze-demo.c
+++ cairo-demos-20120812/maze-demo.c
@@ -259,7 +259,6 @@
 	int show_fps = 1;
 	int benchmark;
 	const char *version = device_show_version(argc, argv);
-	//enum clip clip = device_get_clip(argc, argv);
 
 	int n;
 
--- cairo-demos-20120812.orig/pythagoras-demo.c
+++ cairo-demos-20120812/pythagoras-demo.c
@@ -27,6 +27,7 @@
 
 #define _USE_MATH_DEFINES /* for M_SQRT2 on win32 */
 #include <math.h>
+#include <stdlib.h>
 #include <string.h>
 #include <stdio.h>
 #include <signal.h>
@@ -102,14 +103,12 @@
 	int show_fps = 1;
 	int benchmark;
 	const char *version;
-	enum clip clip;
 	double size = 2;
 
 	int n;
 
 	device = device_open(argc, argv);
 	version = device_show_version(argc, argv);
-	clip = device_get_clip(argc, argv);
 	benchmark = device_get_benchmark(argc, argv);
 	if (benchmark == 0)
 		benchmark = 20;
@@ -144,7 +143,7 @@
 		fb->show (fb);
 		fb->destroy (fb);
 
-		if (benchmark < 0 && 0) {
+		if (benchmark < 0 && !getenv("CAIRO_DEMOS_QUIET")) {
 			delta = now.tv_sec - last_tty.tv_sec;
 			delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
 			frames++;
--- cairo-demos-20120812.orig/sierpinski-demo.c
+++ cairo-demos-20120812/sierpinski-demo.c
@@ -1,4 +1,5 @@
 #include "demo.h"
+#include <stdlib.h>
 #include <string.h>
 #include <stdio.h>
 #include <signal.h>
@@ -71,14 +72,12 @@
 	int show_fps = 1;
 	int benchmark;
 	const char *version;
-	enum clip clip;
 	double theta = 0;
 
 	int n;
 
 	device = device_open(argc, argv);
 	version = device_show_version(argc, argv);
-	clip = device_get_clip(argc, argv);
 	benchmark = device_get_benchmark(argc, argv);
 	if (benchmark == 0)
 		benchmark = 20;
@@ -122,7 +121,7 @@
 		fb->show (fb);
 		fb->destroy (fb);
 
-		if (benchmark < 0 && 0) {
+		if (benchmark < 0 && !getenv("CAIRO_DEMOS_QUIET")) {
 			delta = now.tv_sec - last_tty.tv_sec;
 			delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
 			frames++;
--- cairo-demos-20120812.orig/slideshow-demo.c
+++ cairo-demos-20120812/slideshow-demo.c
@@ -142,7 +142,7 @@
 	}
 	closedir(dir);
 
-	if (count)
+	if (count && !getenv("CAIRO_DEMOS_QUIET"))
 		printf("Loaded %d images from %s\n", count, path);
 }
 
@@ -198,11 +198,13 @@
 		}
 	}
 	if (num_sources == 0)
-		load_sources("/usr/share/backgrounds", device,
+		load_sources(BACKGROUNDDIR, device,
 			     device->get_framebuffer(device)->surface);
 
-	printf("Loaded %d images, %ld/%ld pixels in total\n",
-	       num_sources, (long)out_pixels, (long)in_pixels);
+	if (!getenv("CAIRO_DEMOS_QUIET"))
+		printf("Loaded %d images, %ld/%ld pixels in total\n",
+		       num_sources, (long)out_pixels, (long)in_pixels);
+
 	if (num_sources == 0)
 		return 0;
 
@@ -265,7 +267,7 @@
 		frames++;
 		delta = now.tv_sec - last_tty.tv_sec;
 		delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
-		if (delta >  5) {
+		if (delta >  5 && !getenv("CAIRO_DEMOS_QUIET")) {
 			printf("%.2f fps\n", frames/delta);
 			last_tty = now;
 			frames = 0;
--- cairo-demos-20120812.orig/spinner-demo.c
+++ cairo-demos-20120812/spinner-demo.c
@@ -119,7 +119,7 @@
 {
 	struct device *device;
 	struct timeval start, last_tty, last_fps, now;
-	const char *filename = "images/4000x4000/202672-4000x4000.jpg";
+	const char *filename = DEMOSDATADIR"/images/4000x4000/202672-4000x4000.jpg";
 	int frames, n;
 	int frame = 0;
 	double factor = 1.0125;
@@ -200,7 +200,7 @@
 		fb->show (fb);
 		fb->destroy (fb);
 
-		if (0) {
+		if (benchmark < 0 && !getenv("CAIRO_DEMOS_QUIET")) {
 			frames++;
 			delta = now.tv_sec - last_tty.tv_sec;
 			delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
--- cairo-demos-20120812.orig/spiral-complex.c
+++ cairo-demos-20120812/spiral-complex.c
@@ -124,7 +124,7 @@
 	}
 	closedir(dir);
 
-	if (count)
+	if (count && !getenv("CAIRO_DEMOS_QUIET"))
 		printf("Loaded %d images from %s\n", count, path);
 }
 
@@ -144,7 +144,7 @@
 int main(int argc, char **argv)
 {
 	struct device *device;
-	const char *path = "/usr/share/backgrounds";
+	const char *path = BACKGROUNDDIR;
 	float sincos_lut[360];
 	struct timeval start, last_tty, last_fps, now;
 	int theta, frames, n;
@@ -160,6 +160,8 @@
 		if (strcmp (argv[n], "--images") == 0) {
 			path = argv[n+1];
 			n++;
+	    } else if (strcmp (argv[n], "--prescale") == 0) {
+		prescale = 1;
 	    } else if (strcmp (argv[n], "--hide-path") == 0) {
 		show_path = 0;
 	    } else if (strcmp (argv[n], "--hide-outline") == 0) {
@@ -181,8 +183,9 @@
 	}
 
 	load_sources(path, device->get_framebuffer(device)->surface);
-	printf("Loaded %d images, %ld/%ld pixels in total from %s\n",
-	       num_sources, (long)out_pixels, (long)in_pixels, path);
+	if (!getenv("CAIRO_DEMOS_QUIET"))
+		printf("Loaded %d images, %ld/%ld pixels in total from %s\n",
+		       num_sources, (long)out_pixels, (long)in_pixels, path);
 
 	gettimeofday(&start, 0); now = last_tty = last_fps = start;
 	frames = 0;
@@ -299,7 +302,7 @@
 		frames++;
 		delta = now.tv_sec - last_tty.tv_sec;
 		delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
-		if (delta >  5) {
+		if (delta >  5 && !getenv("CAIRO_DEMOS_QUIET")) {
 			printf("%.2f fps\n", frames/delta);
 			last_tty = now;
 			frames = 0;
--- cairo-demos-20120812.orig/spiral-demo.c
+++ cairo-demos-20120812/spiral-demo.c
@@ -148,7 +148,7 @@
 		fb->show (fb);
 		fb->destroy (fb);
 
-		if (benchmark < 0 && 0) {
+		if (benchmark < 0 && !getenv("CAIRO_DEMOS_QUIET")) {
 			delta = now.tv_sec - last_tty.tv_sec;
 			delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
 			frames++;
--- cairo-demos-20120812.orig/tiger-demo.c
+++ cairo-demos-20120812/tiger-demo.c
@@ -15,6 +15,7 @@
  */
 
 #include <cairo.h>
+#include <stdlib.h>
 #include <sys/time.h>
 #include <stdio.h>
 #include <signal.h>
@@ -129,10 +130,10 @@
 		fb->destroy (fb);
 
 		++frame;
-		if (frame % 256 == 0)
+		if (frame % 192 == 0)
 			factor = 1./factor;
 
-		if (benchmark < 0 && 0) {
+		if (benchmark < 0 && !getenv("CAIRO_DEMOS_QUIET")) {
 			delta = now.tv_sec - last_tty.tv_sec;
 			delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
 			frames++;
--- cairo-demos-20120812.orig/waterfall-demo.c
+++ cairo-demos-20120812/waterfall-demo.c
@@ -170,7 +170,7 @@
 		fb->show (fb);
 		fb->destroy (fb);
 
-		if (benchmark < 0 && 0) {
+		if (benchmark < 0 && !getenv("CAIRO_DEMOS_QUIET")) {
 			delta = now.tv_sec - last_tty.tv_sec;
 			delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
 			frames++;
--- cairo-demos-20120812.orig/wave-demo.c
+++ cairo-demos-20120812/wave-demo.c
@@ -123,13 +123,11 @@
 	int show_fps = 1;
 	int benchmark;
 	const char *version;
-	enum clip clip;
 
 	int n;
 
 	device = device_open(argc, argv);
 	version = device_show_version(argc, argv);
-	clip = device_get_clip(argc, argv);
 	benchmark = device_get_benchmark(argc, argv);
 	if (benchmark == 0)
 		benchmark = 20;
@@ -162,7 +160,7 @@
 		fb->show (fb);
 		fb->destroy (fb);
 
-		if (benchmark < 0 && 0) {
+		if (benchmark < 0 && !getenv("CAIRO_DEMOS_QUIET")) {
 			delta = now.tv_sec - last_tty.tv_sec;
 			delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
 			frames++;
