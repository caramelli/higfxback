# This file is part of HiGFXback

# requires
REQUIRES="autotools-wrappers-lt-build curl-build directfb2-build gst-plugins-base-build libxml2-build libwebp-build openssl-build"

PKG_CONFIG_PATH=/dfb/share/pkgconfig pkg-config --exists --print-errors $REQUIRES || exit 1

if pkg-config --exists openjpeg2-build; then
  REQUIRES="$REQUIRES openjpeg2-build"
else
  pkg-config --exists --print-errors openjpeg-build || exit 1
  REQUIRES="$REQUIRES openjpeg-build"
fi

if PKG_CONFIG_PATH=/dfb/share/pkgconfig pkg-config --exists libde265-build; then
  DE265=1
  REQUIRES="$REQUIRES libde265-build"
fi

if pkg-config --exists x265-build; then
  X265=1
  REQUIRES="$REQUIRES x265-build"
fi

# configure (ac-2.69; am-1.15; lt-2.4.6)
libtoolize -c -f; aclocal -I m4 -I common/m4; autoconf; autoheader -f; automake -a -c
PKG_CONFIG_PATH=/dfb/lib/pkgconfig LDFLAGS=-Wl,-rpath,/dfb/lib ./configure --disable-decklink --disable-fbdev --prefix=/dfb

# build
make

# install
install -d $DESTDIR/dfb/lib
install gst-libs/gst/adaptivedemux/.libs/libgstadaptivedemux-1.0.so.0.* $DESTDIR/dfb/lib/libgstadaptivedemux-1.0.so.0
install gst-libs/gst/audio/.libs/libgstbadaudio-1.0.so.0.* $DESTDIR/dfb/lib/libgstbadaudio-1.0.so.0
install gst-libs/gst/base/.libs/libgstbadbase-1.0.so.0.* $DESTDIR/dfb/lib/libgstbadbase-1.0.so.0
install gst-libs/gst/basecamerabinsrc/.libs/libgstbasecamerabinsrc-1.0.so.0.* $DESTDIR/dfb/lib/libgstbasecamerabinsrc-1.0.so.0
install gst-libs/gst/codecparsers/.libs/libgstcodecparsers-1.0.so.0.* $DESTDIR/dfb/lib/libgstcodecparsers-1.0.so.0
install gst-libs/gst/interfaces/.libs/libgstphotography-1.0.so.0.* $DESTDIR/dfb/lib/libgstphotography-1.0.so.0
install gst-libs/gst/mpegts/.libs/libgstmpegts-1.0.so.0.* $DESTDIR/dfb/lib/libgstmpegts-1.0.so.0
install gst-libs/gst/uridownloader/.libs/libgsturidownloader-1.0.so.0.* $DESTDIR/dfb/lib/libgsturidownloader-1.0.so.0
install gst-libs/gst/video/.libs/libgstbadvideo-1.0.so.0.* $DESTDIR/dfb/lib/libgstbadvideo-1.0.so.0
install -d $DESTDIR/dfb/lib/gstreamer-1.0
install ext/bz2/.libs/libgstbz2.so $DESTDIR/dfb/lib/gstreamer-1.0
install ext/curl/.libs/libgstcurl.so $DESTDIR/dfb/lib/gstreamer-1.0
install ext/dash/.libs/libgstdashdemux.so $DESTDIR/dfb/lib/gstreamer-1.0
install ext/directfb/.libs/libgstdfbvideosink.so $DESTDIR/dfb/lib/gstreamer-1.0
install ext/dtls/.libs/libgstdtls.so $DESTDIR/dfb/lib/gstreamer-1.0
install ext/hls/.libs/libgsthls.so $DESTDIR/dfb/lib/gstreamer-1.0
test $DE265 && install ext/libde265/.libs/libgstlibde265.so $DESTDIR/dfb/lib/gstreamer-1.0
install ext/openjpeg/.libs/libgstopenjpeg.so $DESTDIR/dfb/lib/gstreamer-1.0
install ext/smoothstreaming/.libs/libgstsmoothstreaming.so $DESTDIR/dfb/lib/gstreamer-1.0
install ext/webp/.libs/libgstwebp.so $DESTDIR/dfb/lib/gstreamer-1.0
test $X265 && install ext/x265/.libs/libgstx265.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/accurip/.libs/libgstaccurip.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/adpcmdec/.libs/libgstadpcmdec.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/adpcmenc/.libs/libgstadpcmenc.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/aiff/.libs/libgstaiff.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/asfmux/.libs/libgstasfmux.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/audiofxbad/.libs/libgstaudiofxbad.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/audiomixer/.libs/libgstaudiomixer.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/audiovisualizers/.libs/libgstaudiovisualizers.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/autoconvert/.libs/libgstautoconvert.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/bayer/.libs/libgstbayer.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/camerabin2/.libs/libgstcamerabin2.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/coloreffects/.libs/libgstcoloreffects.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/compositor/.libs/libgstcompositor.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/dataurisrc/.libs/libgstdataurisrc.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/debugutils/.libs/libgstdebugutilsbad.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/dvbsuboverlay/.libs/libgstdvbsuboverlay.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/dvdspu/.libs/libgstdvdspu.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/festival/.libs/libgstfestival.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/fieldanalysis/.libs/libgstfieldanalysis.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/freeverb/.libs/libgstfreeverb.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/frei0r/.libs/libgstfrei0r.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/gaudieffects/.libs/libgstgaudieffects.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/gdp/.libs/libgstgdp.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/geometrictransform/.libs/libgstgeometrictransform.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/id3tag/.libs/libgstid3tag.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/inter/.libs/libgstinter.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/interlace/.libs/libgstinterlace.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/ivfparse/.libs/libgstivfparse.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/ivtc/.libs/libgstivtc.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/jp2kdecimator/.libs/libgstjp2kdecimator.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/jpegformat/.libs/libgstjpegformat.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/librfb/.libs/libgstrfbsrc.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/midi/.libs/libgstmidi.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/mpegdemux/.libs/libgstmpegpsdemux.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/mpegpsmux/.libs/libgstmpegpsmux.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/mpegtsdemux/.libs/libgstmpegtsdemux.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/mpegtsmux/.libs/libgstmpegtsmux.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/mxf/.libs/libgstmxf.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/netsim/.libs/libgstnetsim.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/pcapparse/.libs/libgstpcapparse.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/pnm/.libs/libgstpnm.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/rawparse/.libs/libgstrawparse.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/removesilence/.libs/libgstremovesilence.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/onvif/.libs/libgstrtponvif.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/sdp/.libs/libgstsdpelem.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/segmentclip/.libs/libgstsegmentclip.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/siren/.libs/libgstsiren.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/smooth/.libs/libgstsmooth.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/speed/.libs/libgstspeed.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/stereo/.libs/libgststereo.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/subenc/.libs/libgstsubenc.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/videofilters/.libs/libgstvideofiltersbad.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/videoframe_audiolevel/.libs/libgstvideoframe_audiolevel.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/videoparsers/.libs/libgstvideoparsersbad.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/videosignal/.libs/libgstvideosignal.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/vmnc/.libs/libgstvmnc.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/y4m/.libs/libgsty4mdec.so $DESTDIR/dfb/lib/gstreamer-1.0
install gst/yadif/.libs/libgstyadif.so $DESTDIR/dfb/lib/gstreamer-1.0
install sys/dvb/.libs/libgstdvb.so $DESTDIR/dfb/lib/gstreamer-1.0
install sys/shm/.libs/libgstshm.so $DESTDIR/dfb/lib/gstreamer-1.0
install sys/vcd/.libs/libgstvcdsrc.so $DESTDIR/dfb/lib/gstreamer-1.0

# build.pc
install -d $DESTDIR/dfb/share/pkgconfig
cat > $DESTDIR/dfb/share/pkgconfig/gst-plugins-bad-build.pc << EOF
Name: gst-plugins-bad
Version: 1.8.3
Description: Bad GStreamer plugins
Requires: $REQUIRES

exec=\\
/dfb/lib/libgstadaptivedemux-1.0.so.0 \\
/dfb/lib/libgstbadaudio-1.0.so.0 \\
/dfb/lib/libgstbadbase-1.0.so.0 \\
/dfb/lib/libgstbadvideo-1.0.so.0 \\
/dfb/lib/libgstbasecamerabinsrc-1.0.so.0 \\
/dfb/lib/libgstcodecparsers-1.0.so.0 \\
/dfb/lib/libgstmpegts-1.0.so.0 \\
/dfb/lib/libgstphotography-1.0.so.0 \\
/dfb/lib/libgsturidownloader-1.0.so.0 \\
/dfb/lib/gstreamer-1.0/libgstaccurip.so \\
/dfb/lib/gstreamer-1.0/libgstadpcmdec.so \\
/dfb/lib/gstreamer-1.0/libgstadpcmenc.so \\
/dfb/lib/gstreamer-1.0/libgstaiff.so \\
/dfb/lib/gstreamer-1.0/libgstasfmux.so \\
/dfb/lib/gstreamer-1.0/libgstaudiofxbad.so \\
/dfb/lib/gstreamer-1.0/libgstaudiomixer.so \\
/dfb/lib/gstreamer-1.0/libgstaudiovisualizers.so \\
/dfb/lib/gstreamer-1.0/libgstautoconvert.so \\
/dfb/lib/gstreamer-1.0/libgstbayer.so \\
/dfb/lib/gstreamer-1.0/libgstbz2.so \\
/dfb/lib/gstreamer-1.0/libgstcamerabin2.so \\
/dfb/lib/gstreamer-1.0/libgstcoloreffects.so \\
/dfb/lib/gstreamer-1.0/libgstcompositor.so \\
/dfb/lib/gstreamer-1.0/libgstcurl.so \\
/dfb/lib/gstreamer-1.0/libgstdashdemux.so \\
/dfb/lib/gstreamer-1.0/libgstdataurisrc.so \\
/dfb/lib/gstreamer-1.0/libgstdebugutilsbad.so \\
/dfb/lib/gstreamer-1.0/libgstdfbvideosink.so \\
/dfb/lib/gstreamer-1.0/libgstdtls.so \\
/dfb/lib/gstreamer-1.0/libgstdvb.so \\
/dfb/lib/gstreamer-1.0/libgstdvbsuboverlay.so \\
/dfb/lib/gstreamer-1.0/libgstdvdspu.so \\
/dfb/lib/gstreamer-1.0/libgstfestival.so \\
/dfb/lib/gstreamer-1.0/libgstfieldanalysis.so \\
/dfb/lib/gstreamer-1.0/libgstfreeverb.so \\
/dfb/lib/gstreamer-1.0/libgstfrei0r.so \\
/dfb/lib/gstreamer-1.0/libgstgaudieffects.so \\
/dfb/lib/gstreamer-1.0/libgstgdp.so \\
/dfb/lib/gstreamer-1.0/libgstgeometrictransform.so \\
/dfb/lib/gstreamer-1.0/libgsthls.so \\
/dfb/lib/gstreamer-1.0/libgstid3tag.so \\
/dfb/lib/gstreamer-1.0/libgstinter.so \\
/dfb/lib/gstreamer-1.0/libgstinterlace.so \\
/dfb/lib/gstreamer-1.0/libgstivfparse.so \\
/dfb/lib/gstreamer-1.0/libgstivtc.so \\
/dfb/lib/gstreamer-1.0/libgstjp2kdecimator.so \\
/dfb/lib/gstreamer-1.0/libgstjpegformat.so \\
EOF
test $DE265 && echo /dfb/lib/gstreamer-1.0/libgstlibde265.so \\ >> $DESTDIR/dfb/share/pkgconfig/gst-plugins-bad-build.pc
cat >> $DESTDIR/dfb/share/pkgconfig/gst-plugins-bad-build.pc << EOF
/dfb/lib/gstreamer-1.0/libgstmidi.so \\
/dfb/lib/gstreamer-1.0/libgstmpegpsdemux.so \\
/dfb/lib/gstreamer-1.0/libgstmpegpsmux.so \\
/dfb/lib/gstreamer-1.0/libgstmpegtsdemux.so \\
/dfb/lib/gstreamer-1.0/libgstmpegtsmux.so \\
/dfb/lib/gstreamer-1.0/libgstmxf.so \\
/dfb/lib/gstreamer-1.0/libgstnetsim.so \\
/dfb/lib/gstreamer-1.0/libgstopenjpeg.so \\
/dfb/lib/gstreamer-1.0/libgstpcapparse.so \\
/dfb/lib/gstreamer-1.0/libgstpnm.so \\
/dfb/lib/gstreamer-1.0/libgstrawparse.so \\
/dfb/lib/gstreamer-1.0/libgstremovesilence.so \\
/dfb/lib/gstreamer-1.0/libgstrfbsrc.so \\
/dfb/lib/gstreamer-1.0/libgstrtponvif.so \\
/dfb/lib/gstreamer-1.0/libgstsdpelem.so \\
/dfb/lib/gstreamer-1.0/libgstsegmentclip.so \\
/dfb/lib/gstreamer-1.0/libgstshm.so \\
/dfb/lib/gstreamer-1.0/libgstsiren.so \\
/dfb/lib/gstreamer-1.0/libgstsmooth.so \\
/dfb/lib/gstreamer-1.0/libgstsmoothstreaming.so \\
/dfb/lib/gstreamer-1.0/libgstspeed.so \\
/dfb/lib/gstreamer-1.0/libgststereo.so \\
/dfb/lib/gstreamer-1.0/libgstsubenc.so \\
/dfb/lib/gstreamer-1.0/libgstvcdsrc.so \\
/dfb/lib/gstreamer-1.0/libgstvideofiltersbad.so \\
/dfb/lib/gstreamer-1.0/libgstvideoframe_audiolevel.so \\
/dfb/lib/gstreamer-1.0/libgstvideoparsersbad.so \\
/dfb/lib/gstreamer-1.0/libgstvideosignal.so \\
/dfb/lib/gstreamer-1.0/libgstvmnc.so \\
/dfb/lib/gstreamer-1.0/libgstwebp.so \\
EOF
test $X265 && echo /dfb/lib/gstreamer-1.0/libgstx265.so \\ >> $DESTDIR/dfb/share/pkgconfig/gst-plugins-bad-build.pc
cat >> $DESTDIR/dfb/share/pkgconfig/gst-plugins-bad-build.pc << EOF
/dfb/lib/gstreamer-1.0/libgsty4mdec.so \\
/dfb/lib/gstreamer-1.0/libgstyadif.so
EOF

exit
--- gst-plugins-bad-1.8.3.orig/configure.ac
+++ gst-plugins-bad-1.8.3/configure.ac
@@ -2722,7 +2722,7 @@
   if test x"$HAVE_OPENJPEG" = x"yes"; then
     dnl minor API changes in v2.1
     AG_GST_PKG_CHECK_MODULES(OPENJPEG_2_1, libopenjp2 >= 2.1)
-    if test x"$HAVE_OPENJPEG" = x"yes"; then
+    if test x"$HAVE_OPENJPEG_2_1" = x"yes"; then
       AC_DEFINE([HAVE_OPENJPEG_2_1], 1, [Define if OpenJPEG 2.1 is used])
     fi
   else
--- gst-plugins-bad-1.8.3.orig/ext/dash/gstdashdemux.c
+++ gst-plugins-bad-1.8.3/ext/dash/gstdashdemux.c
@@ -151,7 +151,7 @@
 #include <gio/gio.h>
 #include <gst/base/gsttypefindhelper.h>
 #include <gst/tag/tag.h>
-#include <gst/net/gstnet.h>
+#include <gst/net/net.h>
 #include "gst/gst-i18n-plugin.h"
 #include "gstdashdemux.h"
 #include "gstdash_debug.h"
--- gst-plugins-bad-1.8.3.orig/ext/directfb/dfbvideosink.c
+++ gst-plugins-bad-1.8.3/ext/directfb/dfbvideosink.c
@@ -589,10 +589,9 @@
           switch (event.input.key_symbol) {
             case DIKS_ESCAPE:
             {
-              GST_ELEMENT_ERROR (dfbvideosink, RESOURCE, OPEN_WRITE,
-                  ("Video output device is gone."),
-                  ("We were running fullscreen and user "
-                      "pressed the ESC key, stopping playback."));
+              GstPad *pad = gst_pad_get_peer (GST_VIDEO_SINK_PAD (dfbvideosink));
+              gst_pad_push_event (pad, gst_event_new_eos ());
+              gst_object_unref (pad);
             }
             default:
               GST_DEBUG_OBJECT (dfbvideosink, "key press event %c !",
@@ -1117,12 +1116,15 @@
       pixel_format = DSPF_RGB16;
       break;
     case GST_VIDEO_FORMAT_RGB:
+    case GST_VIDEO_FORMAT_BGR:
       pixel_format = DSPF_RGB24;
       break;
     case GST_VIDEO_FORMAT_xRGB:
+    case GST_VIDEO_FORMAT_BGRx:
       pixel_format = DSPF_RGB32;
       break;
     case GST_VIDEO_FORMAT_ARGB:
+    case GST_VIDEO_FORMAT_BGRA:
       pixel_format = DSPF_ARGB;
       break;
     case GST_VIDEO_FORMAT_I420:
@@ -1160,13 +1162,25 @@
       fourcc = gst_video_format_to_string (GST_VIDEO_FORMAT_RGB16);
       break;
     case DSPF_RGB24:
+#if G_BYTE_ORDER == G_BIG_ENDIAN
       fourcc = gst_video_format_to_string (GST_VIDEO_FORMAT_RGB);
+#else
+      fourcc = gst_video_format_to_string (GST_VIDEO_FORMAT_BGR);
+#endif
       break;
     case DSPF_RGB32:
+#if G_BYTE_ORDER == G_BIG_ENDIAN
       fourcc = gst_video_format_to_string (GST_VIDEO_FORMAT_xRGB);
+#else
+      fourcc = gst_video_format_to_string (GST_VIDEO_FORMAT_BGRx);
+#endif
       break;
     case DSPF_ARGB:
+#if G_BYTE_ORDER == G_BIG_ENDIAN
       fourcc = gst_video_format_to_string (GST_VIDEO_FORMAT_ARGB);
+#else
+      fourcc = gst_video_format_to_string (GST_VIDEO_FORMAT_BGRA);
+#endif
       break;
     case DSPF_YUY2:
       fourcc = gst_video_format_to_string (GST_VIDEO_FORMAT_YUY2);
@@ -1594,11 +1608,9 @@
     lc.flags = DLCONF_PIXELFORMAT;
     lc.pixelformat = pixel_format;
 
-    ret = dfbvideosink->layer->SetConfiguration (dfbvideosink->layer, &lc);
-    if (ret != DFB_OK) {
-      GST_WARNING_OBJECT (dfbvideosink, "failed setting layer pixelformat "
-          "to %s", gst_dfbvideosink_get_format_name (pixel_format));
-    } else {
+    if (DFB_BYTES_PER_PIXEL(pixel_format) ==
+        DFB_BYTES_PER_PIXEL(dfbvideosink->pixel_format)) {
+      dfbvideosink->layer->SetConfiguration (dfbvideosink->layer, &lc);
       dfbvideosink->layer->GetConfiguration (dfbvideosink->layer, &lc);
       dfbvideosink->out_width = lc.width;
       dfbvideosink->out_height = lc.height;
@@ -1609,12 +1621,6 @@
     }
   }
 
-  if (pixel_format != dfbvideosink->pixel_format) {
-    GST_WARNING_OBJECT (dfbvideosink, "setcaps sent us a different pixel "
-        "format %s", gst_dfbvideosink_get_format_name (pixel_format));
-    goto beach;
-  }
-
   dfbvideosink->video_width = video_width;
   dfbvideosink->video_height = video_height;
 
@@ -1634,7 +1640,8 @@
         "failed to set buffer pool configuration");
     goto beach;
   }
-  if (!gst_buffer_pool_set_active (dfbvideosink->pool, TRUE)) {
+  if (pixel_format == dfbvideosink->pixel_format &&
+      !gst_buffer_pool_set_active (dfbvideosink->pool, TRUE)) {
     GST_WARNING_OBJECT (dfbvideosink, "failed to activate buffer pool");
     goto beach;
   }
--- gst-plugins-bad-1.8.3.orig/ext/dtls/gstdtlsconnection.c
+++ gst-plugins-bad-1.8.3/ext/dtls/gstdtlsconnection.c
@@ -239,7 +239,7 @@
       priv->bio = BIO_new (BIO_s_gst_dtls_connection ());
       g_return_if_fail (priv->bio);
 
-      priv->bio->ptr = self;
+      BIO_set_data (priv->bio, self);
       SSL_set_bio (priv->ssl, priv->bio, priv->bio);
 
       SSL_set_verify (priv->ssl,
@@ -573,10 +573,9 @@
   states |= (! !SSL_want_write (priv->ssl) << 20);
   states |= (! !SSL_want_read (priv->ssl) << 24);
 
-  GST_LOG_OBJECT (self, "%s: role=%s buf=(%d,%p:%d/%d) %x|%x %s",
+  GST_LOG_OBJECT (self, "%s: role=%s buf=(%p:%d/%d) %x|%x %s",
       str,
       priv->is_client ? "client" : "server",
-      pqueue_size (priv->ssl->d1->sent_messages),
       priv->bio_buffer,
       priv->bio_buffer_offset,
       priv->bio_buffer_len,
@@ -737,7 +736,7 @@
   self = SSL_get_ex_data (ssl, connection_ex_index);
   g_return_val_if_fail (GST_IS_DTLS_CONNECTION (self), FALSE);
 
-  pem = _gst_dtls_x509_to_pem (x509_ctx->cert);
+  pem = _gst_dtls_x509_to_pem (X509_STORE_CTX_get0_cert (x509_ctx));
 
   if (!pem) {
     GST_WARNING_OBJECT (self,
@@ -749,7 +748,8 @@
       gint len;
 
       len =
-          X509_NAME_print_ex (bio, X509_get_subject_name (x509_ctx->cert), 1,
+          X509_NAME_print_ex (bio,
+          X509_get_subject_name (X509_STORE_CTX_get0_cert (x509_ctx)), 1,
           XN_FLAG_MULTILINE);
       BIO_read (bio, buffer, len);
       buffer[len] = '\0';
@@ -777,29 +777,32 @@
     ########  ####  #######
 */
 
-static BIO_METHOD custom_bio_methods = {
-  BIO_TYPE_BIO,
-  "stream",
-  bio_method_write,
-  bio_method_read,
-  NULL,
-  NULL,
-  bio_method_ctrl,
-  bio_method_new,
-  bio_method_free,
-  NULL,
-};
+static BIO_METHOD *custom_bio_methods;
 
 static BIO_METHOD *
 BIO_s_gst_dtls_connection (void)
 {
-  return &custom_bio_methods;
+  if (custom_bio_methods != NULL)
+    return custom_bio_methods;
+
+  custom_bio_methods = BIO_meth_new (BIO_TYPE_BIO, "stream");
+  if (custom_bio_methods == NULL
+      || !BIO_meth_set_write (custom_bio_methods, bio_method_write)
+      || !BIO_meth_set_read (custom_bio_methods, bio_method_read)
+      || !BIO_meth_set_ctrl (custom_bio_methods, bio_method_ctrl)
+      || !BIO_meth_set_create (custom_bio_methods, bio_method_new)
+      || !BIO_meth_set_destroy (custom_bio_methods, bio_method_free)) {
+    BIO_meth_free (custom_bio_methods);
+    return NULL;
+  }
+
+  return custom_bio_methods;
 }
 
 static int
 bio_method_write (BIO * bio, const char *data, int size)
 {
-  GstDtlsConnection *self = GST_DTLS_CONNECTION (bio->ptr);
+  GstDtlsConnection *self = GST_DTLS_CONNECTION (BIO_get_data (bio));
 
   GST_LOG_OBJECT (self, "BIO: writing %d", size);
 
@@ -824,7 +827,7 @@
 static int
 bio_method_read (BIO * bio, char *out_buffer, int size)
 {
-  GstDtlsConnection *self = GST_DTLS_CONNECTION (bio->ptr);
+  GstDtlsConnection *self = GST_DTLS_CONNECTION (BIO_get_data (bio));
   GstDtlsConnectionPrivate *priv = self->priv;
   guint internal_size;
   gint copy_size;
@@ -868,7 +871,7 @@
 static long
 bio_method_ctrl (BIO * bio, int cmd, long arg1, void *arg2)
 {
-  GstDtlsConnection *self = GST_DTLS_CONNECTION (bio->ptr);
+  GstDtlsConnection *self = GST_DTLS_CONNECTION (BIO_get_data (bio));
   GstDtlsConnectionPrivate *priv = self->priv;
 
   switch (cmd) {
@@ -916,8 +919,8 @@
 {
   GST_LOG_OBJECT (NULL, "BIO: new");
 
-  bio->shutdown = 0;
-  bio->init = 1;
+  BIO_set_shutdown (bio, 0);
+  BIO_set_init (bio, 1);
 
   return 1;
 }
@@ -930,6 +933,6 @@
     return 0;
   }
 
-  GST_LOG_OBJECT (GST_DTLS_CONNECTION (bio->ptr), "BIO free");
+  GST_LOG_OBJECT (GST_DTLS_CONNECTION (BIO_get_data (bio)), "BIO free");
   return 0;
 }
--- gst-plugins-bad-1.8.3.orig/ext/hls/gsthlsdemux.c
+++ gst-plugins-bad-1.8.3/ext/hls/gsthlsdemux.c
@@ -1100,11 +1100,11 @@
 gst_hls_demux_decrypt_start (GstHLSDemux * demux, const guint8 * key_data,
     const guint8 * iv_data)
 {
-  EVP_CIPHER_CTX_init (&demux->aes_ctx);
-  if (!EVP_DecryptInit_ex (&demux->aes_ctx, EVP_aes_128_cbc (), NULL, key_data,
+  demux->aes_ctx = EVP_CIPHER_CTX_new ();
+  if (!EVP_DecryptInit_ex (demux->aes_ctx, EVP_aes_128_cbc (), NULL, key_data,
           iv_data))
     return FALSE;
-  EVP_CIPHER_CTX_set_padding (&demux->aes_ctx, 0);
+  EVP_CIPHER_CTX_set_padding (demux->aes_ctx, 0);
   return TRUE;
 }
 
@@ -1118,10 +1118,10 @@
     return FALSE;
 
   len = (int) length;
-  if (!EVP_DecryptUpdate (&demux->aes_ctx, decrypted_data, &len, encrypted_data,
+  if (!EVP_DecryptUpdate (demux->aes_ctx, decrypted_data, &len, encrypted_data,
           len))
     return FALSE;
-  EVP_DecryptFinal_ex (&demux->aes_ctx, decrypted_data + len, &flen);
+  EVP_DecryptFinal_ex (demux->aes_ctx, decrypted_data + len, &flen);
   g_return_val_if_fail (len + flen == length, FALSE);
   return TRUE;
 }
@@ -1129,7 +1129,8 @@
 static void
 gst_hls_demux_decrypt_end (GstHLSDemux * demux)
 {
-  EVP_CIPHER_CTX_cleanup (&demux->aes_ctx);
+  EVP_CIPHER_CTX_free (demux->aes_ctx);
+  demux->aes_ctx = NULL;
 }
 
 #elif defined(HAVE_NETTLE)
--- gst-plugins-bad-1.8.3.orig/ext/hls/gsthlsdemux.h
+++ gst-plugins-bad-1.8.3/ext/hls/gsthlsdemux.h
@@ -76,7 +76,7 @@
 
   /* decryption tooling */
 #if defined(HAVE_OPENSSL)
-  EVP_CIPHER_CTX aes_ctx;
+  EVP_CIPHER_CTX *aes_ctx;
 #elif defined(HAVE_NETTLE)
   struct CBC_CTX (struct aes_ctx, AES_BLOCK_SIZE) aes_ctx;
 #else
