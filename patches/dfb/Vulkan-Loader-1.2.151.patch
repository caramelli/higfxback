# This file is part of HiGFXback

# requires
REQUIRES="cmake3-build directfb2-build vulkan-headers-build"

PKG_CONFIG_PATH=/dfb/share/pkgconfig pkg-config --exists --print-errors $REQUIRES || exit 1

# configure
GENERATOR=${GENERATOR-Unix Makefiles}
PKG_CONFIG_PATH=/dfb/lib/pkgconfig cmake -DBUILD_WSI_DIRECTFB_SUPPORT=ON -DBUILD_WSI_WAYLAND_SUPPORT=OFF -DBUILD_WSI_XCB_SUPPORT=OFF -DBUILD_WSI_XLIB_SUPPORT=OFF -DCMAKE_INSTALL_PREFIX=/dfb -B build -G "$GENERATOR"

# build
cmake --build build

# install
install -d $DESTDIR/dfb/lib
install build/loader/libvulkan.so.1.* $DESTDIR/dfb/lib/libvulkan.so.1
ln -sf libvulkan.so.1 $DESTDIR/dfb/lib/libvulkan.so
install -d $DESTDIR/dfb/lib/pkgconfig
install -m 644 build/loader/vulkan.pc $DESTDIR/dfb/lib/pkgconfig

# build.pc
install -d $DESTDIR/dfb/share/pkgconfig
cat > $DESTDIR/dfb/share/pkgconfig/vulkan-loader-build.pc << EOF
Name: Vulkan-Loader
Version: 1.2.151
Description: Vulkan Installable Client Driver (ICD) loader
Requires: $REQUIRES

devel=\\
/dfb/lib/libvulkan.so \\
/dfb/lib/pkgconfig/vulkan.pc

exec=\\
/dfb/lib/libvulkan.so.1
EOF

exit
--- Vulkan-Loader-1.2.151.orig/CMakeLists.txt
+++ Vulkan-Loader-1.2.151/CMakeLists.txt
@@ -30,7 +30,7 @@
 add_definitions(-DVK_ENABLE_BETA_EXTENSIONS)
 
 set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_SOURCE_DIR}/cmake")
-find_package(PythonInterp 3 QUIET)
+find_package(Python3 QUIET)
 
 if(IS_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/external/googletest)
     option(BUILD_TESTS "Build Tests" ON)
@@ -192,9 +192,9 @@
 endif()
 
 # Optional codegen target
-if(PYTHONINTERP_FOUND)
+if(Python3_Interpreter_FOUND)
     add_custom_target(VulkanLoader_generated_source
-                      COMMAND ${PYTHON_EXECUTABLE} ${PROJECT_SOURCE_DIR}/scripts/generate_source.py
+                      COMMAND Python3::Interpreter ${PROJECT_SOURCE_DIR}/scripts/generate_source.py
                               ${VulkanRegistry_DIR} --incremental
                       )
 else()
--- Vulkan-Loader-1.2.151.orig/cmake/FindDirectFB.cmake
+++ Vulkan-Loader-1.2.151/cmake/FindDirectFB.cmake
@@ -22,7 +22,7 @@
 
   include(FindPackageHandleStandardArgs)
 
-  FIND_PACKAGE_HANDLE_STANDARD_ARGS(DIRECTFB DEFAULT_MSG DIRECTFB_LIBRARIES DIRECTFB_INCLUDE_DIR)
+  FIND_PACKAGE_HANDLE_STANDARD_ARGS(DirectFB DEFAULT_MSG DIRECTFB_LIBRARIES DIRECTFB_INCLUDE_DIR)
 
   MARK_AS_ADVANCED(DIRECTFB_INCLUDE_DIR DIRECTFB_LIBRARIES)
 ENDIF ()
--- Vulkan-Loader-1.2.151.orig/cmake/FindVulkanHeaders.cmake
+++ Vulkan-Loader-1.2.151/cmake/FindVulkanHeaders.cmake
@@ -87,9 +87,11 @@
 find_package_handle_standard_args(VulkanHeaders
     DEFAULT_MSG
     VulkanHeaders_INCLUDE_DIR)
+set(FPHSA_NAME_MISMATCHED TRUE)
 find_package_handle_standard_args(VulkanRegistry
     DEFAULT_MSG
     VulkanRegistry_DIR)
+unset(FPHSA_NAME_MISMATCHED)
 
 mark_as_advanced(VulkanHeaders_INCLUDE_DIR VulkanRegistry_DIR)
 
--- Vulkan-Loader-1.2.151.orig/loader/CMakeLists.txt
+++ Vulkan-Loader-1.2.151/loader/CMakeLists.txt
@@ -238,7 +238,7 @@
                                      "1"
                                      VERSION
                                      "${VulkanHeaders_VERSION_MAJOR}.${VulkanHeaders_VERSION_MINOR}.${VulkanHeaders_VERSION_PATCH}")
-    target_link_libraries(vulkan ${CMAKE_DL_LIBS} pthread m)
+    target_link_libraries(vulkan ${CMAKE_DL_LIBS} rt m)
     target_link_libraries(vulkan Vulkan::Headers)
     if(APPLE)
         find_library(COREFOUNDATION_LIBRARY NAMES CoreFoundation)
--- Vulkan-Loader-1.2.151.orig/loader/loader.c
+++ Vulkan-Loader-1.2.151/loader/loader.c
@@ -7061,10 +7061,10 @@
 VkResult ReadSortedPhysicalDevices(struct loader_instance *inst, struct LoaderSortedPhysicalDevice **sorted_devices, uint32_t* sorted_count)
 {
     VkResult res = VK_SUCCESS;
-    uint32_t sorted_alloc = 0;
-    struct loader_icd_term* icd_term = NULL;
 
 #if defined(_WIN32)
+    uint32_t sorted_alloc = 0;
+    struct loader_icd_term* icd_term = NULL;
     IDXGIFactory6* dxgi_factory = NULL;
     HRESULT hres = fpCreateDXGIFactory1(&IID_IDXGIFactory6, &dxgi_factory);
     if (hres != S_OK) {
