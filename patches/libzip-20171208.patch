# This file is part of HiGFXback

# requires
REQUIRES="autotools-wrappers-lt-build"

pkg-config --exists --print-errors $REQUIRES || exit 1

# configure (ac-2.69; am-1.15; lt-2.4.6)
libtoolize -c -f; aclocal; autoheader; autoconf; automake -a -c
./configure --disable-static --prefix=

# build
make

# install
install -d $DESTDIR/bin
install src/.libs/zipcmp $DESTDIR/bin
install src/.libs/zipmerge $DESTDIR/bin
install src/.libs/ziptool $DESTDIR/bin
install -d $DESTDIR/include
install -m 644 lib/zip.h $DESTDIR/include
install -m 644 lib/zipconf.h $DESTDIR/include
install -d $DESTDIR/lib
install lib/.libs/libzip.so.5.* $DESTDIR/lib/libzip.so.5
ln -sf libzip.so.5 $DESTDIR/lib/libzip.so
install -d $DESTDIR/lib/pkgconfig
install -m 644 libzip.pc $DESTDIR/lib/pkgconfig

# build.pc
install -d $DESTDIR/share/pkgconfig
cat > $DESTDIR/share/pkgconfig/libzip-build.pc << EOF
Name: libzip
Version: 20171208
Description: ZIP compression library
Requires: $REQUIRES

devel=\\
/include/zip.h \\
/include/zipconf.h \\
/lib/libzip.so \\
/lib/pkgconfig/libzip.pc

exec=\\
/bin/zipcmp \\
/bin/zipmerge \\
/bin/ziptool \\
/lib/libzip.so.5
EOF

exit

# patch
--- libzip-20171208.orig/Makefile.in
+++ libzip-20171208/Makefile.in
@@ -0,0 +1 @@
+# Makefile.in generated by automake 1.15.1
--- libzip-20171208.orig/configure
+++ libzip-20171208/configure
@@ -0,0 +1 @@
+# Generated by GNU Autoconf 2.69
--- libzip-20171208.orig/configure.ac
+++ libzip-20171208/configure.ac
@@ -4,6 +4,7 @@
 AC_CONFIG_HEADERS([config.h])
 AC_CONFIG_MACRO_DIR([m4])
 AM_INIT_AUTOMAKE
+AM_MAINTAINER_MODE
 
 AC_CANONICAL_HOST
 dnl Add rpath flags to installed pkg-config (.pc) file on systems that prefer it this way.
--- libzip-20171208.orig/lib/make_zipconf.sh
+++ libzip-20171208/lib/make_zipconf.sh
@@ -118,9 +118,9 @@
 
 version=`sed -n 's/^#define VERSION "\(.*\)"/\1/p' "$1"`
 
-version_major=`expr "$version" : '^\([0-9]*\)' || true`
-version_minor=`expr "$version" : '^[0-9]*\.\([0-9]*\)' || true`
-version_micro=`expr "$version" : '^[0-9]*\.[0-9]\.\([0-9]*\)' || true`
+version_major=`expr "$version" : '\([0-9]*\)' || true`
+version_minor=`expr "$version" : '[0-9]*\.\([0-9]*\)' || true`
+version_micro=`expr "$version" : '[0-9]*\.[0-9]\.\([0-9]*\)' || true`
 
 if [ -z "$version_major" ]
 then
--- libzip-20171208.orig/ltmain.sh
+++ libzip-20171208/ltmain.sh
@@ -0,0 +1 @@
+# libtool (GNU libtool) 2.4.6
--- libzip-20171208.orig/m4/visibility.m4
+++ libzip-20171208/m4/visibility.m4
@@ -0,0 +1,52 @@
+# visibility.m4 serial 1 (gettext-0.15)
+dnl Copyright (C) 2005 Free Software Foundation, Inc.
+dnl This file is free software; the Free Software Foundation
+dnl gives unlimited permission to copy and/or distribute it,
+dnl with or without modifications, as long as this notice is preserved.
+
+dnl From Bruno Haible.
+
+dnl Tests whether the compiler supports the command-line option
+dnl -fvisibility=hidden and the function and variable attributes
+dnl __attribute__((__visibility__("hidden"))) and
+dnl __attribute__((__visibility__("default"))).
+dnl Does *not* test for __visibility__("protected") - which has tricky
+dnl semantics (see the 'vismain' test in glibc) and does not exist e.g. on
+dnl MacOS X.
+dnl Does *not* test for __visibility__("internal") - which has processor
+dnl dependent semantics.
+dnl Does *not* test for #pragma GCC visibility push(hidden) - which is
+dnl "really only recommended for legacy code".
+dnl Set the variable CFLAG_VISIBILITY.
+dnl Defines and sets the variable HAVE_VISIBILITY.
+
+AC_DEFUN([gl_VISIBILITY],
+[
+  AC_REQUIRE([AC_PROG_CC])
+  CFLAG_VISIBILITY=
+  HAVE_VISIBILITY=0
+  if test -n "$GCC"; then
+    AC_MSG_CHECKING([for simple visibility declarations])
+    AC_CACHE_VAL(gl_cv_cc_visibility, [
+      gl_save_CFLAGS="$CFLAGS"
+      CFLAGS="$CFLAGS -fvisibility=hidden"
+      AC_TRY_COMPILE(
+        [extern __attribute__((__visibility__("hidden"))) int hiddenvar;
+         extern __attribute__((__visibility__("default"))) int exportedvar;
+         extern __attribute__((__visibility__("hidden"))) int hiddenfunc (void);
+         extern __attribute__((__visibility__("default"))) int exportedfunc (void);],
+        [],
+        gl_cv_cc_visibility=yes,
+        gl_cv_cc_visibility=no)
+      CFLAGS="$gl_save_CFLAGS"])
+    AC_MSG_RESULT([$gl_cv_cc_visibility])
+    if test $gl_cv_cc_visibility = yes; then
+      CFLAG_VISIBILITY="-fvisibility=hidden"
+      HAVE_VISIBILITY=1
+    fi
+  fi
+  AC_SUBST([CFLAG_VISIBILITY])
+  AC_SUBST([HAVE_VISIBILITY])
+  AC_DEFINE_UNQUOTED([HAVE_VISIBILITY], [$HAVE_VISIBILITY],
+    [Define to 1 or 0, depending whether the compiler supports simple visibility declarations.])
+])

# source
https://github.com/nih-at/libzip/archive/23dbbbdf3c9feacb97d2bd25e779f62077ca78f6/libzip-20171208.tar.gz
