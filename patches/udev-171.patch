# This file is part of HiGFXback

# requires
REQUIRES="autotools-wrappers-lt-build"

pkg-config --exists --print-errors $REQUIRES || exit 1

# configure (ac-2.68; am-1.11; lt-2.4)
libtoolize -c -f; aclocal -I m4; autoconf; autoheader -f; automake -a -c
./configure --disable-gudev --disable-hwdb --disable-introspection --disable-keymap --disable-udev_acl --with-noarch-pkgconfigdir=/lib/pkgconfig --sbindir=/bin --libexecdir=/lib/udev --prefix=

# build
make

# install
install -d $DESTDIR/bin
install udev/mdevd $DESTDIR/bin
install udev/udevd $DESTDIR/bin
install udev/udevadm $DESTDIR/bin
ln -sf udevadm $DESTDIR/bin/mdev
install -d $DESTDIR/etc/udev
install -m 644 udev.conf $DESTDIR/etc/udev
install -d $DESTDIR/etc/udev/rules.d
cat > $DESTDIR/etc/udev/rules.d/udev.rules << EOF
SUBSYSTEM=="input", IMPORT{program}="input_id %p"
EOF
install -d $DESTDIR/include
install -m 644 libudev/libudev.h $DESTDIR/include
install -d $DESTDIR/lib
install libudev/.libs/libudev.so.0.* $DESTDIR/lib/libudev.so.0
ln -sf libudev.so.0 $DESTDIR/lib/libudev.so
install -d $DESTDIR/lib/udev
install extras/ata_id/ata_id $DESTDIR/lib/udev
install extras/cdrom_id/cdrom_id $DESTDIR/lib/udev
install extras/firmware/firmware $DESTDIR/lib/udev
install extras/input_id/input_id $DESTDIR/lib/udev
install extras/path_id/path_id $DESTDIR/lib/udev
install extras/scsi_id/scsi_id $DESTDIR/lib/udev
install extras/usb_id/usb_id $DESTDIR/lib/udev
install extras/v4l_id/v4l_id $DESTDIR/lib/udev
install -d $DESTDIR/lib/pkgconfig
install -m 644 libudev/libudev.pc $DESTDIR/lib/pkgconfig

# build.pc
install -d $DESTDIR/share/pkgconfig
cat > $DESTDIR/share/pkgconfig/udev-build.pc << EOF
Name: udev
Version: 171
Description: Userspace Device management
Requires: $REQUIRES

devel=\\
/include/libudev.h \\
/lib/libudev.so \\
/lib/pkgconfig/libudev.pc

exec=\\
/bin/mdevd \\
/bin/udevd \\
/bin/udevadm \\
/etc/udev/udev.conf \\
/etc/udev/rules.d/udev.rules \\
/lib/libudev.so.0 \\
/lib/udev/ata_id \\
/lib/udev/cdrom_id \\
/lib/udev/firmware \\
/lib/udev/input_id \\
/lib/udev/path_id \\
/lib/udev/scsi_id \\
/lib/udev/usb_id \\
/lib/udev/v4l_id
EOF

exit
--- udev-171.orig/Makefile.am
+++ udev-171/Makefile.am
@@ -125,8 +125,7 @@
 udevconfdir = $(sysconfdir)/udev
 dist_udevconf_DATA = udev.conf
 
-sharepkgconfigdir = $(datadir)/pkgconfig
-sharepkgconfig_DATA = udev/udev.pc
+noarch_pkgconfig_DATA = udev/udev.pc
 
 if WITH_SYSTEMD
 systemdsystemunit_DATA = \
--- udev-171.orig/configure.ac
+++ udev-171/configure.ac
@@ -11,6 +11,7 @@
 GTK_DOC_CHECK(1.10)
 AC_PREFIX_DEFAULT([/usr])
 AC_PATH_PROG([XSLTPROC], [xsltproc])
+PKG_NOARCH_INSTALLDIR
 
 AC_SEARCH_LIBS([clock_gettime], [rt], [], [AC_MSG_ERROR([POSIX RT library not found])])
 
--- udev-171.orig/extras/mtd_probe/mtd_probe.h
+++ udev-171/extras/mtd_probe/mtd_probe.h
@@ -18,6 +18,7 @@
  */
 
 #include <mtd/mtd-user.h>
+#include <stdint.h>
 
 /* Full oob structure as written on the flash */
 struct sm_oob {
--- udev-171.orig/libudev/libudev-device.c
+++ udev-171/libudev/libudev-device.c
@@ -1644,7 +1644,7 @@
 	return udev_list_get_entry(&udev_device->tags_list);
 }
 
-int udev_device_has_tag(struct udev_device *udev_device, const char *tag)
+UDEV_EXPORT int udev_device_has_tag(struct udev_device *udev_device, const char *tag)
 {
 	struct udev_list_entry *list_entry;
 
--- udev-171.orig/libudev/libudev.h
+++ udev-171/libudev/libudev.h
@@ -101,6 +101,7 @@
 unsigned long long int udev_device_get_seqnum(struct udev_device *udev_device);
 unsigned long long int udev_device_get_usec_since_initialized(struct udev_device *udev_device);
 const char *udev_device_get_sysattr_value(struct udev_device *udev_device, const char *sysattr);
+int udev_device_has_tag(struct udev_device *udev_device, const char *tag);
 
 /*
  * udev_monitor
--- udev-171.orig/udev/mdevd
+++ udev-171/udev/mdevd
@@ -0,0 +1,3 @@
+#!/bin/sh
+
+exec udevd -d
--- udev-171.orig/udev/udevadm.c
+++ udev-171/udev/udevadm.c
@@ -63,7 +63,7 @@
 {
 	const struct command *cmd;
 
-	printf("Usage: udevadm [--help] [--version] [--debug] COMMAND [COMMAND OPTIONS]\n");
+	printf("Usage: udevadm [--help] [--version] [--debug] [--scan] COMMAND [COMMAND OPTIONS]\n");
 	for (cmd = cmds; cmd->name != NULL; cmd++)
 		if (cmd->help != NULL)
 			printf("  %-12s %s\n", cmd->name, cmd->help);
@@ -131,6 +131,7 @@
 	static const struct option options[] = {
 		{ "debug", no_argument, NULL, 'd' },
 		{ "help", no_argument, NULL, 'h' },
+		{ "scan", no_argument, NULL, 's' },
 		{ "version", no_argument, NULL, 'V' },
 		{}
 	};
@@ -149,7 +150,7 @@
 	for (;;) {
 		int option;
 
-		option = getopt_long(argc, argv, "+dhV", options, NULL);
+		option = getopt_long(argc, argv, "+dhsV", options, NULL);
 		if (option == -1)
 			break;
 
@@ -162,6 +163,9 @@
 		case 'h':
 			rc = help(udev, argc, argv);
 			goto out;
+		case 's':
+			rc = run_command(udev, &cmds[1], argc, argv);
+			goto out;
 		case 'V':
 			rc = version(udev, argc, argv);
 			goto out;
