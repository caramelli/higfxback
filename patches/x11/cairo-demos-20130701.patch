# This file is part of HiGFXback

# requires
REQUIRES="cairo-build gdk-pixbuf-build gnome-backgrounds-build make-build"

PKG_CONFIG_PATH=/x11/share/pkgconfig pkg-config --exists --print-errors $REQUIRES || exit 1

# build
PKG_CONFIG_PATH=/x11/lib/pkgconfig LDFLAGS=-Wl,-rpath,/x11/lib DEFINES=-DBACKGROUNDDIR="\\\"/share/backgrounds\\\" -DDEMOSDATADIR=\\\"/x11/share/cairo-demos\\\"" make

# install
install -d $DESTDIR/x11/bin
install bubble-demo $DESTDIR/x11/bin
install chart-demo $DESTDIR/x11/bin
install dragon-demo $DESTDIR/x11/bin
install fish-demo $DESTDIR/x11/bin
install flowers-demo $DESTDIR/x11/bin
install gears-demo $DESTDIR/x11/bin
install gradient-demo $DESTDIR/x11/bin
install maze-demo $DESTDIR/x11/bin
install pythagoras-demo $DESTDIR/x11/bin
install sierpinski-demo $DESTDIR/x11/bin
install slideshow-demo $DESTDIR/x11/bin
install spinner-demo $DESTDIR/x11/bin
install spiral-complex $DESTDIR/x11/bin
install spiral-demo $DESTDIR/x11/bin
install tiger-demo $DESTDIR/x11/bin
install waterfall-demo $DESTDIR/x11/bin
install wave-demo $DESTDIR/x11/bin
install -d $DESTDIR/x11/share/cairo-demos
install -m 644 bubblebg.png $DESTDIR/x11/share/cairo-demos
install -m 644 bubble.png $DESTDIR/x11/share/cairo-demos
install -m 644 fishbg.png $DESTDIR/x11/share/cairo-demos
install -m 644 fishstrip.png $DESTDIR/x11/share/cairo-demos
install -d $DESTDIR/x11/share/cairo-demos/images/4000x4000
install -m 644 images/4000x4000/202672-4000x4000.jpg $DESTDIR/x11/share/cairo-demos/images/4000x4000

# build.pc
install -d $DESTDIR/share/pkgconfig
cat > $DESTDIR/share/pkgconfig/cairo-demos-build.pc << EOF
Name: cairo-demos
Version: 20130701
Description: A collection of Cairo demos and test programs
Requires: $REQUIRES

exec=\\
/x11/bin/bubble-demo \\
/x11/bin/chart-demo \\
/x11/bin/dragon-demo \\
/x11/bin/fish-demo \\
/x11/bin/flowers-demo \\
/x11/bin/gears-demo \\
/x11/bin/gradient-demo \\
/x11/bin/maze-demo \\
/x11/bin/pythagoras-demo \\
/x11/bin/sierpinski-demo \\
/x11/bin/slideshow-demo \\
/x11/bin/spinner-demo \\
/x11/bin/spiral-complex \\
/x11/bin/spiral-demo \\
/x11/bin/tiger-demo \\
/x11/bin/waterfall-demo \\
/x11/bin/wave-demo \\
/x11/share/cairo-demos/bubblebg.png \\
/x11/share/cairo-demos/bubble.png \\
/x11/share/cairo-demos/fishbg.png \\
/x11/share/cairo-demos/fishstrip.png \\
/x11/share/cairo-demos/images/4000x4000/202672-4000x4000.jpg
EOF

exit
--- cairo-demos-20130701.orig/Makefile
+++ cairo-demos-20130701/Makefile
@@ -1,5 +1,5 @@
 SOURCES:=demo.c png.c
-REQUIRES:=cairo
+REQUIRES:=cairo libpng
 
 DRM:=0
 ifneq ($(DRM),0)
@@ -64,50 +64,52 @@
 endif
 
 ifeq ($(shell pkg-config --exists gdk-pixbuf-2.0 && echo 1), 1)
-all: spinner-demo slideshow-demo
+all: spinner-demo spiral-complex slideshow-demo
 REQUIRES+=gdk-pixbuf-2.0
 DEFINES+=-DHAVE_GDK_PIXBUF
 endif
 
 CFLAGS:=$(shell pkg-config --cflags $(REQUIRES)) -Wall -g3
-LIBS:=$(shell pkg-config --libs $(REQUIRES)) -lpng -lm
+LIBS:=$(shell pkg-config --libs $(REQUIRES)) -lm
 
 spinner-demo: spinner-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ spinner-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ spinner-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
+spiral-complex: spiral-complex.c $(SOURCES) demo.h Makefile
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ spiral-complex.c $(SOURCES) $(LDFLAGS) $(LIBS)
 spiral-demo: spiral-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ spiral-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ spiral-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 slideshow-demo: slideshow-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ slideshow-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ slideshow-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 poppler-demo: poppler-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ poppler-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ poppler-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 tiger-demo: tiger-demo.c $(SOURCES) demo.h Makefile tiger.inc
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ tiger-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ tiger-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 fish-demo: fish-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ fish-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ fish-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 fish2-demo: fish2-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ fish2-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ fish2-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 bubble-demo: bubble-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ bubble-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ bubble-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 flowers-demo: flowers-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ flowers-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ flowers-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 gears-demo: gears-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ gears-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ gears-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 gradient-demo: gradient-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ gradient-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ gradient-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 chart-demo: chart-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ chart-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ chart-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 waterfall-demo: waterfall-demo.c $(SOURCES) demo.h list.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ waterfall-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ waterfall-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 dragon-demo: dragon-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ dragon-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ dragon-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 pythagoras-demo: pythagoras-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ pythagoras-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ pythagoras-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 wave-demo: wave-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ wave-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ wave-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 sierpinski-demo: sierpinski-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ sierpinski-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ sierpinski-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 maze-demo: maze-demo.c $(SOURCES) demo.h Makefile
-	$(CC) $(DEFINES) $(CFLAGS) -o $@ maze-demo.c $(SOURCES) $(LIBS)
+	$(CC) $(DEFINES) $(CFLAGS) -o $@ maze-demo.c $(SOURCES) $(LDFLAGS) $(LIBS)
 clean:
 	rm -f *-demo
 
--- cairo-demos-20130701.orig/bubble-demo.c
+++ cairo-demos-20130701/bubble-demo.c
@@ -29,7 +29,7 @@
 	cairo_matrix_t m;
 	cairo_t *cr;
 
-	image = surface_create_from_png(device->scanout, "bubblebg.png");
+	image = surface_create_from_png(device->scanout, DEMOSDATADIR"/bubblebg.png");
 	s->height = cairo_image_surface_get_height(image);
 	s->width = cairo_image_surface_get_width(image);
 
@@ -117,7 +117,7 @@
 	cairo_surface_t *image;
 	cairo_t *cr;
 
-	image = surface_create_from_png(device->scanout, "bubble.png");
+	image = surface_create_from_png(device->scanout, DEMOSDATADIR"/bubble.png");
 	s->height = cairo_image_surface_get_height(image);
 	s->width = cairo_image_surface_get_width(image);
 
@@ -312,6 +312,7 @@
 		cairo_paint(cr);
 		cairo_set_operator(cr, CAIRO_OPERATOR_OVER);
 		cairo_set_source(cr, bg.pattern);
+		cairo_paint(cr);
 		cairo_mask(cr, mask.pattern);
 
 		for (n = 0; n < num_bubbles; n++)
--- cairo-demos-20130701.orig/chart-demo.c
+++ cairo-demos-20130701/chart-demo.c
@@ -295,7 +295,7 @@
 		for (n = 0; n < 5; n++)
 			chart_update(&c[n]);
 
-		if (benchmark < 0 && 0) {
+		if (benchmark < 0 && !getenv("CAIRO_DEMOS_QUIET")) {
 			delta = now.tv_sec - last_tty.tv_sec;
 			delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
 			frames++;
--- cairo-demos-20130701.orig/demo.c
+++ cairo-demos-20130701/demo.c
@@ -226,7 +226,10 @@
 	exit(1);
     }
 
-    printf("Using backend \"%s\"\n", device->name);
+    if (!getenv("CAIRO_DEMOS_QUIET")) {
+	printf("Using backend \"%s\"\n", device->name);
+    }
+
     return device;
 }
 
@@ -351,11 +354,11 @@
 			      name, frame_count, frame_count == 1 ? "" : "s");
     } else {
 	    if (version)
-		    snprintf (buf, sizeof (buf), "%s (%s): %.1f fps, %d frames",
-			      name, version, 1. / avg, frame_count);
+		    snprintf (buf, sizeof (buf), "%s (%s): %.1f fps",
+			      name, version, 1. / avg);
 	    else
-		    snprintf (buf, sizeof (buf), "%s: %.1f fps, %d frames",
-			      name, 1. / avg, frame_count);
+		    snprintf (buf, sizeof (buf), "%s: %.1f fps",
+			      name, 1. / avg);
     }
     cairo_set_font_size (cr, 18);
     cairo_text_extents (cr, buf, &extents);
--- cairo-demos-20130701.orig/dragon-demo.c
+++ cairo-demos-20130701/dragon-demo.c
@@ -27,6 +27,7 @@
  */
 
 #include "demo.h"
+#include <stdlib.h>
 #include <string.h>
 #include <stdio.h>
 #include <signal.h>
@@ -181,13 +182,11 @@
 	int stroke = 1;
 	int benchmark;
 	const char *version;
-	enum clip clip;
 
 	int n;
 
 	device = device_open(argc, argv);
 	version = device_show_version(argc, argv);
-	clip = device_get_clip(argc, argv);
 	benchmark = device_get_benchmark(argc, argv);
 	if (benchmark == 0)
 		benchmark = 20;
@@ -223,7 +222,7 @@
 		fb->show (fb);
 		fb->destroy (fb);
 
-		if (benchmark < 0 && 0) {
+		if (benchmark < 0 && !getenv("CAIRO_DEMOS_QUIET")) {
 			delta = now.tv_sec - last_tty.tv_sec;
 			delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
 			frames++;
--- cairo-demos-20130701.orig/fish-demo.c
+++ cairo-demos-20130701/fish-demo.c
@@ -30,7 +30,7 @@
 	double sf;
 	cairo_t *cr;
 
-	image = surface_create_from_png(device->scanout, "fishbg.png");
+	image = surface_create_from_png(device->scanout, DEMOSDATADIR"/fishbg.png");
 	height = cairo_image_surface_get_height(image);
 	width = cairo_image_surface_get_width(image);
 	sf = height / (double)device->height;
@@ -64,7 +64,7 @@
 	int width, height, x, y;
 	cairo_t *cr;
 
-	image = surface_create_from_png(device->scanout, "fishstrip.png");
+	image = surface_create_from_png(device->scanout, DEMOSDATADIR"/fishstrip.png");
 	width = cairo_image_surface_get_width(image);
 	height = cairo_image_surface_get_height(image);
 	surface = cairo_surface_create_similar(device->scanout,
@@ -264,7 +264,7 @@
 		fb->show (fb);
 		fb->destroy (fb);
 
-		if (benchmark < 0 && 0) {
+		if (benchmark < 0 && !getenv("CAIRO_DEMOS_QUIET")) {
 			delta = now.tv_sec - last_tty.tv_sec;
 			delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
 			frames++;
--- cairo-demos-20130701.orig/flowers-demo.c
+++ cairo-demos-20130701/flowers-demo.c
@@ -422,7 +422,7 @@
 
 		flowers_update(device->width, device->height);
 
-		if (benchmark < 0 && 0) {
+		if (benchmark < 0 && !getenv("CAIRO_DEMOS_QUIET")) {
 			delta = now.tv_sec - last_tty.tv_sec;
 			delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
 			frames++;
--- cairo-demos-20130701.orig/gradient-demo.c
+++ cairo-demos-20130701/gradient-demo.c
@@ -219,7 +219,7 @@
 		fb->show (fb);
 		fb->destroy (fb);
 
-		if (benchmark < 0 && 0) {
+		if (benchmark < 0 && !getenv("CAIRO_DEMOS_QUIET")) {
 			delta = now.tv_sec - last_tty.tv_sec;
 			delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
 			frames++;
--- cairo-demos-20130701.orig/maze-demo.c
+++ cairo-demos-20130701/maze-demo.c
@@ -316,7 +316,6 @@
 	int use_mask = 0;
 	int benchmark;
 	const char *version = device_show_version(argc, argv);
-	//enum clip clip = device_get_clip(argc, argv);
 
 	int n;
 
--- cairo-demos-20130701.orig/pythagoras-demo.c
+++ cairo-demos-20130701/pythagoras-demo.c
@@ -27,6 +27,7 @@
 
 #define _USE_MATH_DEFINES /* for M_SQRT2 on win32 */
 #include <math.h>
+#include <stdlib.h>
 #include <string.h>
 #include <stdio.h>
 #include <signal.h>
@@ -102,14 +103,12 @@
 	int show_fps = 1;
 	int benchmark;
 	const char *version;
-	enum clip clip;
 	double size = 2;
 
 	int n;
 
 	device = device_open(argc, argv);
 	version = device_show_version(argc, argv);
-	clip = device_get_clip(argc, argv);
 	benchmark = device_get_benchmark(argc, argv);
 	if (benchmark == 0)
 		benchmark = 20;
@@ -144,7 +143,7 @@
 		fb->show (fb);
 		fb->destroy (fb);
 
-		if (benchmark < 0 && 0) {
+		if (benchmark < 0 && !getenv("CAIRO_DEMOS_QUIET")) {
 			delta = now.tv_sec - last_tty.tv_sec;
 			delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
 			frames++;
--- cairo-demos-20130701.orig/sierpinski-demo.c
+++ cairo-demos-20130701/sierpinski-demo.c
@@ -1,4 +1,5 @@
 #include "demo.h"
+#include <stdlib.h>
 #include <string.h>
 #include <stdio.h>
 #include <signal.h>
@@ -71,14 +72,12 @@
 	int show_fps = 1;
 	int benchmark;
 	const char *version;
-	enum clip clip;
 	double theta = 0;
 
 	int n;
 
 	device = device_open(argc, argv);
 	version = device_show_version(argc, argv);
-	clip = device_get_clip(argc, argv);
 	benchmark = device_get_benchmark(argc, argv);
 	if (benchmark == 0)
 		benchmark = 20;
@@ -122,7 +121,7 @@
 		fb->show (fb);
 		fb->destroy (fb);
 
-		if (benchmark < 0 && 0) {
+		if (benchmark < 0 && !getenv("CAIRO_DEMOS_QUIET")) {
 			delta = now.tv_sec - last_tty.tv_sec;
 			delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
 			frames++;
--- cairo-demos-20130701.orig/slideshow-demo.c
+++ cairo-demos-20130701/slideshow-demo.c
@@ -142,7 +142,7 @@
 	}
 	closedir(dir);
 
-	if (count)
+	if (count && !getenv("CAIRO_DEMOS_QUIET"))
 		printf("Loaded %d images from %s\n", count, path);
 }
 
@@ -198,11 +198,13 @@
 		}
 	}
 	if (num_sources == 0)
-		load_sources("/usr/share/backgrounds", device,
+		load_sources(BACKGROUNDDIR, device,
 			     device->get_framebuffer(device)->surface);
 
-	printf("Loaded %d images, %ld/%ld pixels in total\n",
-	       num_sources, (long)out_pixels, (long)in_pixels);
+	if (!getenv("CAIRO_DEMOS_QUIET"))
+		printf("Loaded %d images, %ld/%ld pixels in total\n",
+		       num_sources, (long)out_pixels, (long)in_pixels);
+
 	if (num_sources == 0)
 		return 0;
 
@@ -265,7 +267,7 @@
 		frames++;
 		delta = now.tv_sec - last_tty.tv_sec;
 		delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
-		if (delta >  5) {
+		if (delta >  5 && !getenv("CAIRO_DEMOS_QUIET")) {
 			printf("%.2f fps\n", frames/delta);
 			last_tty = now;
 			frames = 0;
--- cairo-demos-20130701.orig/spinner-demo.c
+++ cairo-demos-20130701/spinner-demo.c
@@ -119,7 +119,7 @@
 {
 	struct device *device;
 	struct timeval start, last_tty, last_fps, now;
-	const char *filename = "images/4000x4000/202672-4000x4000.jpg";
+	const char *filename = DEMOSDATADIR"/images/4000x4000/202672-4000x4000.jpg";
 	int frames, n;
 	int frame = 0;
 	double factor = 1.0125;
@@ -200,7 +200,7 @@
 		fb->show (fb);
 		fb->destroy (fb);
 
-		if (0) {
+		if (benchmark < 0 && !getenv("CAIRO_DEMOS_QUIET")) {
 			frames++;
 			delta = now.tv_sec - last_tty.tv_sec;
 			delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
--- cairo-demos-20130701.orig/spiral-complex.c
+++ cairo-demos-20130701/spiral-complex.c
@@ -32,7 +32,7 @@
 	if (pb == NULL)
 		return 0;
 
-	image = _cairo_image_surface_create_from_pixbuf(pb);
+	image = surface_create_from_pixbuf(target, pb);
 	g_object_unref(pb);
 
 	width = cairo_image_surface_get_width(image);
@@ -124,7 +124,7 @@
 	}
 	closedir(dir);
 
-	if (count)
+	if (count && !getenv("CAIRO_DEMOS_QUIET"))
 		printf("Loaded %d images from %s\n", count, path);
 }
 
@@ -144,7 +144,7 @@
 int main(int argc, char **argv)
 {
 	struct device *device;
-	const char *path = "/usr/share/backgrounds";
+	const char *path = BACKGROUNDDIR;
 	float sincos_lut[360];
 	struct timeval start, last_tty, last_fps, now;
 	int theta, frames, n;
@@ -181,8 +181,9 @@
 	}
 
 	load_sources(path, device->get_framebuffer(device)->surface);
-	printf("Loaded %d images, %ld/%ld pixels in total from %s\n",
-	       num_sources, (long)out_pixels, (long)in_pixels, path);
+	if (!getenv("CAIRO_DEMOS_QUIET"))
+		printf("Loaded %d images, %ld/%ld pixels in total from %s\n",
+		       num_sources, (long)out_pixels, (long)in_pixels, path);
 
 	gettimeofday(&start, 0); now = last_tty = last_fps = start;
 	frames = 0;
@@ -299,7 +300,7 @@
 		frames++;
 		delta = now.tv_sec - last_tty.tv_sec;
 		delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
-		if (delta >  5) {
+		if (delta >  5 && !getenv("CAIRO_DEMOS_QUIET")) {
 			printf("%.2f fps\n", frames/delta);
 			last_tty = now;
 			frames = 0;
--- cairo-demos-20130701.orig/spiral-demo.c
+++ cairo-demos-20130701/spiral-demo.c
@@ -148,7 +148,7 @@
 		fb->show (fb);
 		fb->destroy (fb);
 
-		if (benchmark < 0 && 0) {
+		if (benchmark < 0 && !getenv("CAIRO_DEMOS_QUIET")) {
 			delta = now.tv_sec - last_tty.tv_sec;
 			delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
 			frames++;
--- cairo-demos-20130701.orig/tiger-demo.c
+++ cairo-demos-20130701/tiger-demo.c
@@ -15,6 +15,7 @@
  */
 
 #include <cairo.h>
+#include <stdlib.h>
 #include <sys/time.h>
 #include <stdio.h>
 #include <signal.h>
@@ -129,10 +130,10 @@
 		fb->destroy (fb);
 
 		++frame;
-		if (frame % 256 == 0)
+		if (frame % 192 == 0)
 			factor = 1./factor;
 
-		if (benchmark < 0 && 0) {
+		if (benchmark < 0 && !getenv("CAIRO_DEMOS_QUIET")) {
 			delta = now.tv_sec - last_tty.tv_sec;
 			delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
 			frames++;
--- cairo-demos-20130701.orig/waterfall-demo.c
+++ cairo-demos-20130701/waterfall-demo.c
@@ -170,7 +170,7 @@
 		fb->show (fb);
 		fb->destroy (fb);
 
-		if (benchmark < 0 && 0) {
+		if (benchmark < 0 && !getenv("CAIRO_DEMOS_QUIET")) {
 			delta = now.tv_sec - last_tty.tv_sec;
 			delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
 			frames++;
--- cairo-demos-20130701.orig/wave-demo.c
+++ cairo-demos-20130701/wave-demo.c
@@ -123,13 +123,11 @@
 	int show_fps = 1;
 	int benchmark;
 	const char *version;
-	enum clip clip;
 
 	int n;
 
 	device = device_open(argc, argv);
 	version = device_show_version(argc, argv);
-	clip = device_get_clip(argc, argv);
 	benchmark = device_get_benchmark(argc, argv);
 	if (benchmark == 0)
 		benchmark = 20;
@@ -162,7 +160,7 @@
 		fb->show (fb);
 		fb->destroy (fb);
 
-		if (benchmark < 0 && 0) {
+		if (benchmark < 0 && !getenv("CAIRO_DEMOS_QUIET")) {
 			delta = now.tv_sec - last_tty.tv_sec;
 			delta += (now.tv_usec - last_tty.tv_usec)*1e-6;
 			frames++;
--- cairo-demos-20130701.orig/xcb.c
+++ cairo-demos-20130701/xcb.c
@@ -81,7 +81,7 @@
     xcb_connection_t *c;
     xcb_screen_t *s;
     xcb_visualtype_t *v;
-    uint32_t values[] = { 1 };
+    uint32_t values[] = { 0 };
     int i;
 
     c = xcb_connect (NULL, NULL);
--- cairo-demos-20130701.orig/ximage.c
+++ cairo-demos-20130701/ximage.c
@@ -132,7 +132,7 @@
 	    break;
     }
 
-    attr.override_redirect = True;
+    attr.override_redirect = False;
     win = XCreateWindow (dpy, DefaultRootWindow (dpy),
 			 x, y,
 			 device->base.width, device->base.height, 0,
--- cairo-demos-20130701.orig/xlib.c
+++ cairo-demos-20130701/xlib.c
@@ -115,7 +115,7 @@
 	    break;
     }
 
-    attr.override_redirect = True;
+    attr.override_redirect = False;
     device->drawable = XCreateWindow (dpy, DefaultRootWindow (dpy),
 				      x, y,
 				      device->base.width, device->base.height, 0,
--- cairo-demos-20130701.orig/xshm.c
+++ cairo-demos-20130701/xshm.c
@@ -148,7 +148,7 @@
 	    break;
     }
 
-    attr.override_redirect = True;
+    attr.override_redirect = False;
     device->drawable = XCreateWindow (dpy, DefaultRootWindow (dpy),
 				      x, y,
 				      device->base.width, device->base.height, 0,
@@ -175,7 +175,6 @@
     XShmQueryVersion (dpy, &major, &minor, &has_pixmap);
 
     if (has_pixmap) {
-	printf ("Using SHM Pixmap\n");
 	device->pixmap = XShmCreatePixmap (dpy,
 					   device->drawable,
 					   device->shm.shmaddr,
@@ -184,7 +183,6 @@
 					   device->base.height,
 					   24);
     } else {
-	printf ("Using SHM PutImage\n");
 	device->pixmap = 0;
     }
 
