# This file is part of HiGFXback

# requires
REQUIRES="libstdc++-build make-build stb-build"

pkg-config --exists --print-errors $REQUIRES || exit 1

if PKG_CONFIG_PATH=/x11/share/pkgconfig pkg-config --exists egl-opengl-stubs-build; then
  GL=1
  REQUIRES="$REQUIRES egl-opengl-stubs-build"
fi

if PKG_CONFIG_PATH=/x11/share/pkgconfig pkg-config --exists vulkan-loader-build; then
  VK=1
  REQUIRES="$REQUIRES vulkan-loader-build"
fi

if PKG_CONFIG_PATH=/x11/share/pkgconfig pkg-config --exists glfw-build; then
  test $VK && PKG_CONFIG_PATH=/x11/share/pkgconfig pkg-config --print-requires glfw-build | grep -q vulkan-loader-build || { echo GLFW with Vulkan support required; exit 1; }
  GLFW=1
  REQUIRES="$REQUIRES glfw-build"
fi

if PKG_CONFIG_PATH=/x11/share/pkgconfig pkg-config --exists sdl2-build; then
  test $GL && PKG_CONFIG_PATH=/x11/share/pkgconfig pkg-config --print-requires sdl2-build | grep -q egl-opengl-stubs-build || { echo SDL2 with OpenGL support required; exit 1; }
  test $VK && PKG_CONFIG_PATH=/x11/share/pkgconfig pkg-config --print-requires sdl2-build | grep -q vulkan-loader-build || { echo SDL2 with Vulkan support required; exit 1; }
  SDL2=1
  REQUIRES="$REQUIRES sdl2-build"
fi

# configure
rm -f imstb_rectpack.h
rm -f imstb_textedit.h
rm -f imstb_truetype.h

# build
test $GL && test $GLFW && PKG_CONFIG_PATH=/x11/lib/pkgconfig CXXFLAGS="-DIMGUI_STB_RECT_PACK_FILENAME=\<stb/stb_rect_pack.h\> -DIMGUI_STB_TEXTEDIT_FILENAME=\<stb/stb_textedit.h\> -DIMGUI_STB_TRUETYPE_FILENAME=\<stb/stb_truetype.h\>" LIBS=-Wl,-rpath,/x11/lib make -C examples/example_glfw_opengl2
test $VK && test $GLFW && PKG_CONFIG_PATH=/x11/lib/pkgconfig CXXFLAGS="-DIMGUI_STB_RECT_PACK_FILENAME=\<stb/stb_rect_pack.h\> -DIMGUI_STB_TEXTEDIT_FILENAME=\<stb/stb_textedit.h\> -DIMGUI_STB_TRUETYPE_FILENAME=\<stb/stb_truetype.h\>" LIBS=-Wl,-rpath,/x11/lib make -C examples/example_glfw_vulkan
test $GL && test $SDL2 && PKG_CONFIG_PATH=/x11/lib/pkgconfig CXXFLAGS="-DIMGUI_STB_RECT_PACK_FILENAME=\<stb/stb_rect_pack.h\> -DIMGUI_STB_TEXTEDIT_FILENAME=\<stb/stb_textedit.h\> -DIMGUI_STB_TRUETYPE_FILENAME=\<stb/stb_truetype.h\>" LIBS=-Wl,-rpath,/x11/lib make -C examples/example_sdl_opengl2
test $GL && test $SDL2 && PKG_CONFIG_PATH=/x11/lib/pkgconfig USE_OPENGLES=1 CXXFLAGS="-DIMGUI_STB_RECT_PACK_FILENAME=\<stb/stb_rect_pack.h\> -DIMGUI_STB_TEXTEDIT_FILENAME=\<stb/stb_textedit.h\> -DIMGUI_STB_TRUETYPE_FILENAME=\<stb/stb_truetype.h\>" LIBS=-Wl,-rpath,/x11/lib make -C examples/example_sdl_opengl3
test $SDL2 && PKG_CONFIG_PATH=/x11/lib/pkgconfig CXXFLAGS="-DIMGUI_STB_RECT_PACK_FILENAME=\<stb/stb_rect_pack.h\> -DIMGUI_STB_TEXTEDIT_FILENAME=\<stb/stb_textedit.h\> -DIMGUI_STB_TRUETYPE_FILENAME=\<stb/stb_truetype.h\>" LIBS=-Wl,-rpath,/x11/lib make -C examples/example_sdl_sdlrenderer
test $VK && test $SDL2 && PKG_CONFIG_PATH=/x11/lib/pkgconfig CXXFLAGS="-DIMGUI_STB_RECT_PACK_FILENAME=\<stb/stb_rect_pack.h\> -DIMGUI_STB_TEXTEDIT_FILENAME=\<stb/stb_textedit.h\> -DIMGUI_STB_TRUETYPE_FILENAME=\<stb/stb_truetype.h\>" LIBS=-Wl,-rpath,/x11/lib make -C examples/example_sdl_vulkan

# install
install -d $DESTDIR/x11/include/imgui
install -m 644 imconfig.h $DESTDIR/x11/include/imgui
install -m 644 imgui.cpp $DESTDIR/x11/include/imgui
install -m 644 imgui.h $DESTDIR/x11/include/imgui
install -m 644 imgui_draw.cpp $DESTDIR/x11/include/imgui
install -m 644 imgui_internal.h $DESTDIR/x11/include/imgui
install -m 644 imgui_tables.cpp $DESTDIR/x11/include/imgui
install -m 644 imgui_widgets.cpp $DESTDIR/x11/include/imgui
test $GL && install -m 644 backends/imgui_impl_opengl2.cpp $DESTDIR/x11/include/imgui
test $GL && install -m 644 backends/imgui_impl_opengl2.h $DESTDIR/x11/include/imgui
test $GL && install -m 644 backends/imgui_impl_opengl3.cpp $DESTDIR/x11/include/imgui
test $GL && install -m 644 backends/imgui_impl_opengl3.h $DESTDIR/x11/include/imgui
test $VK && install -m 644 backends/imgui_impl_vulkan.cpp $DESTDIR/x11/include/imgui
test $VK && install -m 644 backends/imgui_impl_vulkan.h $DESTDIR/x11/include/imgui
test $GLFW && install -m 644 backends/imgui_impl_glfw.cpp $DESTDIR/x11/include/imgui
test $GLFW && install -m 644 backends/imgui_impl_glfw.h $DESTDIR/x11/include/imgui
test $SDL2 && install -m 644 backends/imgui_impl_sdl.cpp $DESTDIR/x11/include/imgui
test $SDL2 && install -m 644 backends/imgui_impl_sdl.h $DESTDIR/x11/include/imgui
test $SDL2 && install -m 644 backends/imgui_impl_sdlrenderer.cpp $DESTDIR/x11/include/imgui
test $SDL2 && install -m 644 backends/imgui_impl_sdlrenderer.h $DESTDIR/x11/include/imgui
install -d $DESTDIR/x11/share/imgui
install -m 644 imgui_demo.cpp $DESTDIR/x11/share/imgui
test $GL && test $GLFW && install examples/example_glfw_opengl2/example_glfw_opengl2 $DESTDIR/x11/share/imgui/example_glfw_opengl
test $VK && test $GLFW && install examples/example_glfw_vulkan/example_glfw_vulkan $DESTDIR/x11/share/imgui
test $GL && test $SDL2 && install examples/example_sdl_opengl2/example_sdl_opengl2 $DESTDIR/x11/share/imgui/example_sdl2_opengl
test $GL && test $SDL2 && install examples/example_sdl_opengl3/example_sdl_opengl3 $DESTDIR/x11/share/imgui/example_sdl2_opengles
test $SDL2 && install examples/example_sdl_sdlrenderer/example_sdl_sdlrenderer $DESTDIR/x11/share/imgui/example_sdl2_renderer
test $VK && test $SDL2 && install examples/example_sdl_vulkan/example_sdl_vulkan $DESTDIR/x11/share/imgui/example_sdl2_vulkan

# build.pc
install -d $DESTDIR/x11/share/pkgconfig
cat > $DESTDIR/x11/share/pkgconfig/imgui-build.pc << EOF
Name: imgui
Version: 1.88
Description: Immediate mode GUI
Requires: $REQUIRES

devel=\\
/x11/include/imgui/imconfig.h \\
/x11/include/imgui/imgui.cpp \\
/x11/include/imgui/imgui.h \\
/x11/include/imgui/imgui_draw.cpp \\
EOF
test $GL && cat >> $DESTDIR/x11/share/pkgconfig/imgui-build.pc << EOF
/x11/include/imgui/imgui_impl_opengl2.cpp \\
/x11/include/imgui/imgui_impl_opengl2.h \\
/x11/include/imgui/imgui_impl_opengl3.cpp
/x11/include/imgui/imgui_impl_opengl3.h \\
EOF
test $VK && cat >> $DESTDIR/x11/share/pkgconfig/imgui-build.pc << EOF
/x11/include/imgui/imgui_impl_vulkan.cpp \\
/x11/include/imgui/imgui_impl_vulkan.h \\
EOF
test $GLFW && cat >> $DESTDIR/x11/share/pkgconfig/imgui-build.pc << EOF
/x11/include/imgui/imgui_impl_glfw.cpp \\
/x11/include/imgui/imgui_impl_glfw.h \\
EOF
test $SDL2 && cat >> $DESTDIR/x11/share/pkgconfig/imgui-build.pc << EOF
/x11/include/imgui/imgui_impl_sdl.cpp \\
/x11/include/imgui/imgui_impl_sdl.h \\
/x11/include/imgui/imgui_impl_sdlrenderer.cpp \\
/x11/include/imgui/imgui_impl_sdlrenderer.h \\
EOF
cat >> $DESTDIR/x11/share/pkgconfig/imgui-build.pc << EOF
/x11/include/imgui/imgui_internal.h \\
/x11/include/imgui/imgui_tables.cpp \\
/x11/include/imgui/imgui_widgets.cpp \\
/x11/share/imgui/imgui_demo.cpp

exec=\\
EOF
test $GL && test $GLFW && cat >> $DESTDIR/x11/share/pkgconfig/imgui-build.pc << EOF
/x11/share/imgui/example_glfw_opengl \\
EOF
test $VK && test $GLFW && cat >> $DESTDIR/x11/share/pkgconfig/imgui-build.pc << EOF
/x11/share/imgui/example_glfw_vulkan \\
EOF
test $GL && test $SDL2 && cat >> $DESTDIR/x11/share/pkgconfig/imgui-build.pc << EOF
/x11/share/imgui/example_sdl2_opengl \\
/x11/share/imgui/example_sdl2_opengles \\
EOF
test $SDL2 && cat >> $DESTDIR/x11/share/pkgconfig/imgui-build.pc << EOF
/x11/share/imgui/example_sdl2_renderer \\
EOF
test $VK && test $SDL2 && cat >> $DESTDIR/x11/share/pkgconfig/imgui-build.pc << EOF
/x11/share/imgui/example_sdl2_vulkan \\
EOF
sed -i '$ s/ \\//' $DESTDIR/x11/share/pkgconfig/imgui-build.pc

exit

# patch
--- imgui-1.88.orig/backends/imgui_impl_sdl.cpp
+++ imgui-1.88/backends/imgui_impl_sdl.cpp
@@ -65,7 +65,9 @@
 
 // SDL
 #include <SDL.h>
+#ifdef _WIN32
 #include <SDL_syswm.h>
+#endif
 #if defined(__APPLE__)
 #include <TargetConditionals.h>
 #endif
--- imgui-1.88.orig/examples/example_glfw_opengl2/Makefile
+++ imgui-1.88/examples/example_glfw_opengl2/Makefile
@@ -22,9 +22,8 @@
 OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))
 UNAME_S := $(shell uname -s)
 
-CXXFLAGS = -std=c++11 -I$(IMGUI_DIR) -I$(IMGUI_DIR)/backends
+CXXFLAGS += -std=c++11 -I$(IMGUI_DIR) -I$(IMGUI_DIR)/backends
 CXXFLAGS += -g -Wall -Wformat
-LIBS =
 
 ##---------------------------------------------------------------------
 ## BUILD FLAGS PER PLATFORM
@@ -32,10 +31,9 @@
 
 ifeq ($(UNAME_S), Linux) #LINUX
 	ECHO_MESSAGE = "Linux"
-	LIBS += -lGL `pkg-config --static --libs glfw3`
+	LIBS += -lGL `pkg-config --libs glfw3`
 
 	CXXFLAGS += `pkg-config --cflags glfw3`
-	CFLAGS = $(CXXFLAGS)
 endif
 
 ifeq ($(UNAME_S), Darwin) #APPLE
@@ -46,7 +44,6 @@
 	LIBS += -lglfw
 
 	CXXFLAGS += -I/usr/local/include -I/opt/local/include -I/opt/homebrew/include
-	CFLAGS = $(CXXFLAGS)
 endif
 
 ifeq ($(OS), Windows_NT)
@@ -54,7 +51,6 @@
 	LIBS += -lglfw3 -lgdi32 -lopengl32 -limm32
 
 	CXXFLAGS += `pkg-config --cflags glfw3`
-	CFLAGS = $(CXXFLAGS)
 endif
 
 ##---------------------------------------------------------------------
@@ -74,8 +70,7 @@
 	@echo Build complete for $(ECHO_MESSAGE)
 
 $(EXE): $(OBJS)
-	$(CXX) -o $@ $^ $(CXXFLAGS) $(LIBS)
+	$(CXX) -o $@ $^ $(LIBS)
 
 clean:
 	rm -f $(EXE) $(OBJS)
-
--- imgui-1.88.orig/examples/example_glfw_vulkan/Makefile
+++ imgui-1.88/examples/example_glfw_vulkan/Makefile
@@ -0,0 +1,50 @@
+#
+# You will need GLFW (http://www.glfw.org)
+#
+
+#CXX = g++
+#CXX = clang++
+
+EXE = example_glfw_vulkan
+IMGUI_DIR = ../..
+SOURCES = main.cpp
+SOURCES += $(IMGUI_DIR)/imgui.cpp $(IMGUI_DIR)/imgui_demo.cpp $(IMGUI_DIR)/imgui_draw.cpp $(IMGUI_DIR)/imgui_tables.cpp $(IMGUI_DIR)/imgui_widgets.cpp
+SOURCES += $(IMGUI_DIR)/backends/imgui_impl_glfw.cpp $(IMGUI_DIR)/backends/imgui_impl_vulkan.cpp
+OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))
+UNAME_S := $(shell uname -s)
+
+CXXFLAGS += -std=c++11 -I$(IMGUI_DIR) -I$(IMGUI_DIR)/backends
+CXXFLAGS += -g -Wall -Wformat
+
+##---------------------------------------------------------------------
+## BUILD FLAGS PER PLATFORM
+##---------------------------------------------------------------------
+
+ifeq ($(UNAME_S), Linux) #LINUX
+	ECHO_MESSAGE = "Linux"
+	LIBS += -lvulkan `pkg-config --libs glfw3`
+
+	CXXFLAGS += `pkg-config --cflags glfw3`
+endif
+
+##---------------------------------------------------------------------
+## BUILD RULES
+##---------------------------------------------------------------------
+
+%.o:%.cpp
+	$(CXX) $(CXXFLAGS) -c -o $@ $<
+
+%.o:$(IMGUI_DIR)/%.cpp
+	$(CXX) $(CXXFLAGS) -c -o $@ $<
+
+%.o:$(IMGUI_DIR)/backends/%.cpp
+	$(CXX) $(CXXFLAGS) -c -o $@ $<
+
+all: $(EXE)
+	@echo Build complete for $(ECHO_MESSAGE)
+
+$(EXE): $(OBJS)
+	$(CXX) -o $@ $^ $(LIBS)
+
+clean:
+	rm -f $(EXE) $(OBJS)
--- imgui-1.88.orig/examples/example_sdl_opengl2/Makefile
+++ imgui-1.88/examples/example_sdl_opengl2/Makefile
@@ -22,9 +22,8 @@
 OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))
 UNAME_S := $(shell uname -s)
 
-CXXFLAGS = -std=c++11 -I$(IMGUI_DIR) -I$(IMGUI_DIR)/backends
+CXXFLAGS += -std=c++11 -I$(IMGUI_DIR) -I$(IMGUI_DIR)/backends
 CXXFLAGS += -g -Wall -Wformat
-LIBS =
 
 ##---------------------------------------------------------------------
 ## BUILD FLAGS PER PLATFORM
@@ -32,10 +31,9 @@
 
 ifeq ($(UNAME_S), Linux) #LINUX
 	ECHO_MESSAGE = "Linux"
-	LIBS += -lGL -ldl `sdl2-config --libs`
+	LIBS += -lGL `pkg-config --libs sdl2`
 
-	CXXFLAGS += `sdl2-config --cflags`
-	CFLAGS = $(CXXFLAGS)
+	CXXFLAGS += `pkg-config --cflags sdl2`
 endif
 
 ifeq ($(UNAME_S), Darwin) #APPLE
@@ -45,7 +43,6 @@
 
 	CXXFLAGS += `sdl2-config --cflags`
 	CXXFLAGS += -I/usr/local/include -I/opt/local/include
-	CFLAGS = $(CXXFLAGS)
 endif
 
 ifeq ($(OS), Windows_NT)
@@ -53,7 +50,6 @@
 	LIBS += -lgdi32 -lopengl32 -limm32 `pkg-config --static --libs sdl2`
 
 	CXXFLAGS += `pkg-config --cflags sdl2`
-	CFLAGS = $(CXXFLAGS)
 endif
 
 ##---------------------------------------------------------------------
@@ -73,7 +69,7 @@
 	@echo Build complete for $(ECHO_MESSAGE)
 
 $(EXE): $(OBJS)
-	$(CXX) -o $@ $^ $(CXXFLAGS) $(LIBS)
+	$(CXX) -o $@ $^ $(LIBS)
 
 clean:
 	rm -f $(EXE) $(OBJS)
--- imgui-1.88.orig/examples/example_sdl_opengl3/Makefile
+++ imgui-1.88/examples/example_sdl_opengl3/Makefile
@@ -21,22 +21,28 @@
 SOURCES += $(IMGUI_DIR)/backends/imgui_impl_sdl.cpp $(IMGUI_DIR)/backends/imgui_impl_opengl3.cpp
 OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))
 UNAME_S := $(shell uname -s)
-LINUX_GL_LIBS = -lGL
 
-CXXFLAGS = -std=c++11 -I$(IMGUI_DIR) -I$(IMGUI_DIR)/backends
+CXXFLAGS += -std=c++11 -I$(IMGUI_DIR) -I$(IMGUI_DIR)/backends
 CXXFLAGS += -g -Wall -Wformat
-LIBS =
+
+##---------------------------------------------------------------------
+## OPENGL
+##---------------------------------------------------------------------
+
+LINUX_GL_LIBS = -ldl -lGL
 
 ##---------------------------------------------------------------------
 ## OPENGL ES
 ##---------------------------------------------------------------------
 
+ifdef USE_OPENGLES
 ## This assumes a GL ES library available in the system, e.g. libGLESv2.so
-# CXXFLAGS += -DIMGUI_IMPL_OPENGL_ES2
-# LINUX_GL_LIBS = -lGLESv2
+CXXFLAGS += -DIMGUI_IMPL_OPENGL_ES2
+LINUX_GL_LIBS = -lGLESv2
 ## If you're on a Raspberry Pi and want to use the legacy drivers,
 ## use the following instead:
 # LINUX_GL_LIBS = -L/opt/vc/lib -lbrcmGLESv2
+endif
 
 ##---------------------------------------------------------------------
 ## BUILD FLAGS PER PLATFORM
@@ -44,10 +50,9 @@
 
 ifeq ($(UNAME_S), Linux) #LINUX
 	ECHO_MESSAGE = "Linux"
-	LIBS += $(LINUX_GL_LIBS) -ldl `sdl2-config --libs`
+	LIBS += $(LINUX_GL_LIBS) `pkg-config --libs sdl2`
 
-	CXXFLAGS += `sdl2-config --cflags`
-	CFLAGS = $(CXXFLAGS)
+	CXXFLAGS += `pkg-config --cflags sdl2`
 endif
 
 ifeq ($(UNAME_S), Darwin) #APPLE
@@ -57,7 +62,6 @@
 
 	CXXFLAGS += `sdl2-config --cflags`
 	CXXFLAGS += -I/usr/local/include -I/opt/local/include
-	CFLAGS = $(CXXFLAGS)
 endif
 
 ifeq ($(OS), Windows_NT)
@@ -65,7 +69,6 @@
     LIBS += -lgdi32 -lopengl32 -limm32 `pkg-config --static --libs sdl2`
 
     CXXFLAGS += `pkg-config --cflags sdl2`
-    CFLAGS = $(CXXFLAGS)
 endif
 
 ##---------------------------------------------------------------------
@@ -85,7 +88,7 @@
 	@echo Build complete for $(ECHO_MESSAGE)
 
 $(EXE): $(OBJS)
-	$(CXX) -o $@ $^ $(CXXFLAGS) $(LIBS)
+	$(CXX) -o $@ $^ $(LIBS)
 
 clean:
 	rm -f $(EXE) $(OBJS)
--- imgui-1.88.orig/examples/example_sdl_sdlrenderer/Makefile
+++ imgui-1.88/examples/example_sdl_sdlrenderer/Makefile
@@ -22,9 +22,8 @@
 OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))
 UNAME_S := $(shell uname -s)
 
-CXXFLAGS = -std=c++11 -I$(IMGUI_DIR) -I$(IMGUI_DIR)/backends
+CXXFLAGS += -std=c++11 -I$(IMGUI_DIR) -I$(IMGUI_DIR)/backends
 CXXFLAGS += -g -Wall -Wformat
-LIBS =
 
 ##---------------------------------------------------------------------
 ## BUILD FLAGS PER PLATFORM
@@ -32,10 +31,9 @@
 
 ifeq ($(UNAME_S), Linux) #LINUX
 	ECHO_MESSAGE = "Linux"
-	LIBS += -lGL -ldl `sdl2-config --libs`
+	LIBS += `pkg-config --libs sdl2`
 
-	CXXFLAGS += `sdl2-config --cflags`
-	CFLAGS = $(CXXFLAGS)
+	CXXFLAGS += `pkg-config --cflags sdl2`
 endif
 
 ifeq ($(UNAME_S), Darwin) #APPLE
@@ -45,15 +43,13 @@
 
 	CXXFLAGS += `sdl2-config --cflags`
 	CXXFLAGS += -I/usr/local/include -I/opt/local/include
-	CFLAGS = $(CXXFLAGS)
 endif
 
 ifeq ($(OS), Windows_NT)
 	ECHO_MESSAGE = "MinGW"
-	LIBS += -lgdi32 -lopengl32 -limm32 `pkg-config --static --libs sdl2`
+	LIBS += -lgdi32 -limm32 `pkg-config --static --libs sdl2`
 
 	CXXFLAGS += `pkg-config --cflags sdl2`
-	CFLAGS = $(CXXFLAGS)
 endif
 
 ##---------------------------------------------------------------------
@@ -73,7 +69,7 @@
 	@echo Build complete for $(ECHO_MESSAGE)
 
 $(EXE): $(OBJS)
-	$(CXX) -o $@ $^ $(CXXFLAGS) $(LIBS)
+	$(CXX) -o $@ $^ $(LIBS)
 
 clean:
 	rm -f $(EXE) $(OBJS)
--- imgui-1.88.orig/examples/example_sdl_vulkan/Makefile
+++ imgui-1.88/examples/example_sdl_vulkan/Makefile
@@ -0,0 +1,50 @@
+#
+# You will need SDL2 (http://www.libsdl.org)
+#
+
+#CXX = g++
+#CXX = clang++
+
+EXE = example_sdl_vulkan
+IMGUI_DIR = ../..
+SOURCES = main.cpp
+SOURCES += $(IMGUI_DIR)/imgui.cpp $(IMGUI_DIR)/imgui_demo.cpp $(IMGUI_DIR)/imgui_draw.cpp $(IMGUI_DIR)/imgui_tables.cpp $(IMGUI_DIR)/imgui_widgets.cpp
+SOURCES += $(IMGUI_DIR)/backends/imgui_impl_sdl.cpp $(IMGUI_DIR)/backends/imgui_impl_vulkan.cpp
+OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))
+UNAME_S := $(shell uname -s)
+
+CXXFLAGS += -std=c++11 -I$(IMGUI_DIR) -I$(IMGUI_DIR)/backends
+CXXFLAGS += -g -Wall -Wformat
+
+##---------------------------------------------------------------------
+## BUILD FLAGS PER PLATFORM
+##---------------------------------------------------------------------
+
+ifeq ($(UNAME_S), Linux) #LINUX
+	ECHO_MESSAGE = "Linux"
+	LIBS += -lvulkan `pkg-config --libs sdl2`
+
+	CXXFLAGS += `pkg-config --cflags sdl2`
+endif
+
+##---------------------------------------------------------------------
+## BUILD RULES
+##---------------------------------------------------------------------
+
+%.o:%.cpp
+	$(CXX) $(CXXFLAGS) -c -o $@ $<
+
+%.o:$(IMGUI_DIR)/%.cpp
+	$(CXX) $(CXXFLAGS) -c -o $@ $<
+
+%.o:$(IMGUI_DIR)/backends/%.cpp
+	$(CXX) $(CXXFLAGS) -c -o $@ $<
+
+all: $(EXE)
+	@echo Build complete for $(ECHO_MESSAGE)
+
+$(EXE): $(OBJS)
+	$(CXX) -o $@ $^ $(LIBS)
+
+clean:
+	rm -f $(EXE) $(OBJS)
--- imgui-1.88.orig/imgui_internal.h
+++ imgui-1.88/imgui_internal.h
@@ -186,7 +186,11 @@
 #define STB_TEXTEDIT_GETWIDTH_NEWLINE   (-1.0f)
 #define STB_TEXTEDIT_UNDOSTATECOUNT     99
 #define STB_TEXTEDIT_UNDOCHARCOUNT      999
+#ifdef IMGUI_STB_TEXTEDIT_FILENAME
+#include IMGUI_STB_TEXTEDIT_FILENAME
+#else
 #include "imstb_textedit.h"
+#endif
 
 } // namespace ImStb
 
--- imgui-1.88.orig/imgui_widgets.cpp
+++ imgui-1.88/imgui_widgets.cpp
@@ -3762,7 +3762,11 @@
 #define STB_TEXTEDIT_K_SHIFT        0x400000
 
 #define STB_TEXTEDIT_IMPLEMENTATION
+#ifdef IMGUI_STB_TEXTEDIT_FILENAME
+#include IMGUI_STB_TEXTEDIT_FILENAME
+#else
 #include "imstb_textedit.h"
+#endif
 
 // stb_textedit internally allows for a single undo record to do addition and deletion, but somehow, calling
 // the stb_textedit_paste() function creates two separate records, so we perform it manually. (FIXME: Report to nothings/stb?)

# source
https://github.com/ocornut/imgui/archive/v1.88/imgui-1.88.tar.gz
